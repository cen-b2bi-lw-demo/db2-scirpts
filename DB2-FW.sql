-- -----------------------------------------------------
-- Portal Database Creation
-- Portal Version: v2.12.0+
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `LW_ALERT_RULES`
-- -----------------------------------------------------
CONNECT TO FW;
CREATE TABLE LW_ALERT_RULES (ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER), CLIENT_ID INT NOT NULL, SOURCE_ID VARCHAR(255) NULL DEFAULT NULL, DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL, DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL, STATUS_REASON VARCHAR(255) NULL DEFAULT NULL, ADDRESS VARCHAR(1024) NOT NULL, ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y', RULE_VERSION INT NOT NULL WITH DEFAULT 1, USERNAME VARCHAR(45) NULL DEFAULT NULL, TIMESTAMP TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (ID));

CREATE INDEX IDX_ALERT_RULE_CLIENT_ID ON LW_ALERT_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_ARCHIVE_HISTORY`
-- -----------------------------------------------------
CREATE TABLE LW_ARCHIVE_HISTORY (
  CLIENT_ID INT NOT NULL,
  WFID BIGINT NOT NULL,
  FROM_DATE CHAR(10) NOT NULL,
  ID BIGINT NOT NULL,
  PARENT_WFID BIGINT NOT NULL,
  EVENT_DATE_TIME TIMESTAMP NULL DEFAULT NULL,
  EVENTS INT NULL DEFAULT NULL,
  MESSAGES INT NULL DEFAULT NULL,
  DOCUMENTS INT NULL DEFAULT NULL,
  DIRECTORY VARCHAR(255) NULL DEFAULT NULL,
  FILENAME VARCHAR(255) NULL DEFAULT NULL,
  STATUS VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (CLIENT_ID, WFID)
 )
;

CREATE INDEX IDX_ARCHIVE_HISTORY_CLIENT_ID ON LW_ARCHIVE_HISTORY (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_DATA`
-- -----------------------------------------------------
CREATE TABLE LW_DATA (
  ID VARCHAR(50) NOT NULL,
  DATA BLOB(200000000) NULL DEFAULT NULL,
  DATA_DATE_TIME TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID))
;


-- -----------------------------------------------------
-- Table `LW_DOCREFLIST`
-- -----------------------------------------------------
CREATE TABLE LW_DOCREFLIST (
  ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  WFID BIGINT NOT NULL,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  ALT_REF VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX LW_DOCREFLIST_WFID_IDX ON LW_DOCREFLIST (WFID ASC);
CREATE INDEX LW_DOCREFLIST_REF_IDX ON LW_DOCREFLIST (WFID ASC, REFERENCE ASC);
CREATE INDEX LW_DOCREFLIST_ALTREF_IDX ON LW_DOCREFLIST (WFID ASC, ALT_REF ASC);


-- -----------------------------------------------------
-- Table `LW_DOCUMENT`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT (
  CLIENT_ID INT NOT NULL,
  WFID BIGINT NOT NULL,
  IN_WFID BIGINT NULL DEFAULT NULL,
  OUT_WFID BIGINT NULL DEFAULT NULL,
  SOURCE_ID VARCHAR(255) NOT NULL,
  SOURCE_NAME VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NOT NULL,
  DESTINATION_NAME VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NOT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  TEST_FLAG CHAR(1) NULL DEFAULT 'N',
  PARENT_WFID BIGINT NULL DEFAULT NULL,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  ALT_REF VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_DATE DATE NULL DEFAULT NULL,
  DOCUMENT_TIME TIME NULL DEFAULT NULL,
  STATUS VARCHAR(255) NOT NULL,
  STATUS_REASON VARCHAR(255) NULL DEFAULT NULL,
  ACTION_FLAG CHAR(1) NULL DEFAULT NULL,
  ORIGINAL_SIZE BIGINT NULL DEFAULT NULL,
  FINAL_SIZE BIGINT NULL DEFAULT NULL,
  INTERCHANGE_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  GROUP_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  TRANSACTION_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  DOCUMENT_VALUE DECIMAL(18,5) NULL DEFAULT NULL,
  CURRENCY_CODE CHAR(3) NULL DEFAULT NULL,
  DIRECTION CHAR(1) NOT NULL DEFAULT 'U',
  LAST_DATE_TIME TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  TRANSACTION_LAST_DATE_TIME TIMESTAMP(0) NOT NULL,
  TRANSACTION_STATUS VARCHAR(255) NOT NULL,
  TRANSACTION_STATUS_REASON VARCHAR(255) DEFAULT NULL,
  DOCUMENT_CREATION_DATE TIMESTAMP(0) DEFAULT NULL,
  DOCUMENT_COUNT INT NOT NULL DEFAULT 1,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX LW_DOC_IDX_CLIENT_WFID ON LW_DOCUMENT (WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_SID ON LW_DOCUMENT (SOURCE_ID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_SNAME ON LW_DOCUMENT (SOURCE_NAME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_DID ON LW_DOCUMENT (DESTINATION_ID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_DNAME ON LW_DOCUMENT (DESTINATION_NAME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_STATUS ON LW_DOCUMENT (STATUS ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_DTYPE ON LW_DOCUMENT (DOCUMENT_TYPE ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_PAR_WFID ON LW_DOCUMENT (PARENT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_IN_WFID ON LW_DOCUMENT (IN_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_OUT_WFID ON LW_DOCUMENT (OUT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_LAST_DATE_TIME ON LW_DOCUMENT (LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOCUMENT_IDX_CLIENT_ID ON LW_DOCUMENT (CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_TRANS_DATE_TIME ON LW_DOCUMENT (TRANSACTION_LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_TRANS_STATUS ON LW_DOCUMENT (TRANSACTION_STATUS ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_REF ON LW_DOCUMENT (REFERENCE ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_IDX_ALTREF ON LW_DOCUMENT (ALT_REF ASC, CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_DOCUMENT_EXT`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_EXT (
  ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  DOCUMENT_WFID BIGINT NOT NULL,
  DOC_KEY VARCHAR(45) NOT NULL,
  DOC_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID))
;

CREATE INDEX FK_LW_DOCUMENT_EXT_LW_DOCUMENT1_IDX ON LW_DOCUMENT_EXT (DOCUMENT_WFID ASC);
CREATE INDEX IDX_DOCUMENT_EXT_CLIENT_ID ON LW_DOCUMENT_EXT (CLIENT_ID ASC);
CREATE INDEX IDX_DOC_EXT ON LW_DOCUMENT_EXT (CLIENT_ID, DOC_KEY, DOC_VALUE);

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_EXT_KEY`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_EXT_KEY (
  CLIENT_ID INT NOT NULL,
  DOC_KEY VARCHAR(45) NOT NULL,
  PRIMARY KEY (CLIENT_ID, DOC_KEY)
   )
;

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_NOTES`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_NOTES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  DOC_WFID BIGINT NOT NULL,
  NOTE VARCHAR(1000) NOT NULL,
  DATE_CREATED TIMESTAMP NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_DOCUMENT_NOTES_DOC_WFID_idx
    FOREIGN KEY (DOC_WFID)
    REFERENCES LW_DOCUMENT (WFID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
  ;

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NOT NULL,
  RUN_BEFORE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  BP VARCHAR(255) NOT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  SYNC_FLAG CHARACTER(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_DOCUMENT_RULES_CLIENT_ID ON LW_DOCUMENT_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_EDIFACT_OVERRIDES`
-- -----------------------------------------------------
CREATE TABLE LW_EDIFACT_OVERRIDES (
  ID INT NOT NULL,
  ALIAS VARCHAR(35) NULL DEFAULT NULL,
  UNA VARCHAR(3) NULL DEFAULT NULL,
  USE_GROUPS VARCHAR(3) NULL DEFAULT NULL,
  MSG_ASSOCIATION_ASSIGNED_CODE VARCHAR(6) NULL DEFAULT NULL,
  MSG_CODE_LIST_DIR_VER_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_COMMON_ACCESS_REFERENCE VARCHAR(35) NULL DEFAULT NULL,
  MSG_CONTROL_AGENCY VARCHAR(2) NULL DEFAULT NULL,
  MSG_FIRST_AND_LAST_TRANSFER VARCHAR(1) NULL DEFAULT NULL,
  MSG_IMPL_CONTROL_AGENCY VARCHAR(3) NULL DEFAULT NULL,
  MSG_IMPL_GUIDELINE_ID VARCHAR(14) NULL DEFAULT NULL,
  MSG_IMPL_GUIDELINE_REL_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_IMPL_GUIDELINE_VER_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_REL_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_SCENARIO_ID VARCHAR(14) NULL DEFAULT NULL,
  MSG_SCENARIO_REL_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_SCENARIO_VER_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_SCENARIO_CONTROL_AGENCY VARCHAR(3) NULL DEFAULT NULL,
  MSG_SEQUENCE_OF_TRANSFERS VARCHAR(2) NULL DEFAULT NULL,
  MSG_SUBSET_CONTROL_AGENCY VARCHAR(3) NULL DEFAULT NULL,
  MSG_SUBSET_ID VARCHAR(14) NULL DEFAULT NULL,
  MSG_SUBSET_REL_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_SUBSET_VER_NUM VARCHAR(3) NULL DEFAULT NULL,
  MSG_TYPE_SUB_FUNCTION_ID VARCHAR(6) NULL DEFAULT NULL,
  MSG_TYPE VARCHAR(6) NULL DEFAULT NULL,
  MSG_VER_NUM VARCHAR(3) NULL DEFAULT NULL,
  GRP_APPLICATION_PSWD VARCHAR(14) NULL DEFAULT NULL,
  GRP_APPLICATION_RECIPIENT_ID VARCHAR(35) NULL DEFAULT NULL,
  GRP_APPLICATION_SENDER_ID VARCHAR(35) NULL DEFAULT NULL,
  GRP_CONTROL_AGENCY VARCHAR(3) NULL DEFAULT NULL,
  GRP_RECIPIENT_ID_CODE_QUAL VARCHAR(4) NULL DEFAULT NULL,
  GRP_SENDER_ID_CODE_QUAL VARCHAR(4) NULL DEFAULT NULL,
  INT_ACK_OVERDUE_TIME VARCHAR(3) NULL DEFAULT NULL,
  INT_ACK_OVERDUE_TIME_MINUTES VARCHAR(2) NULL DEFAULT NULL,
  INT_ACK_REQUEST VARCHAR(1) NULL DEFAULT NULL,
  INT_AGREEMENT_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_APPLICATION_REFERENCE VARCHAR(14) NULL DEFAULT NULL,
  INT_CHARACTER_ENCODING VARCHAR(3) NULL DEFAULT NULL,
  INT_CONTROL_REFERENCE VARCHAR(14) NULL DEFAULT NULL,
  INT_PROCESSING_PRIORITY_CODE VARCHAR(1) NULL DEFAULT NULL,
  INT_RECIPIENT_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_RECIPIENT_ID_CODE_QUAL VARCHAR(4) NULL DEFAULT NULL,
  INT_RECIPIENT_INTERNAL_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_RECIPIENT_INTERNAL_SUB_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_RECIPIENT_REF_PSWD VARCHAR(14) NULL DEFAULT NULL,
  INT_RECIPIENT_REF_PSWD_QUAL VARCHAR(2) NULL DEFAULT NULL,
  INT_SENDER_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_SENDER_ID_CODE_QUAL VARCHAR(4) NULL DEFAULT NULL,
  INT_SENDER_INTERNAL_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_SENDER_INTERNAL_SUB_ID VARCHAR(35) NULL DEFAULT NULL,
  INT_SRV_CODE_LIST_DIR_VER_NUM VARCHAR(6) NULL DEFAULT NULL,
  INT_SYNTAX_ID VARCHAR(4) NULL DEFAULT NULL,
  INT_SYNTAX_VER_NUM VARCHAR(1) NULL DEFAULT NULL,
  INT_TEST_INDICATOR VARCHAR(1) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP NULL DEFAULT NULL,
  ELEMENT_SEPARATOR varchar(4) DEFAULT NULL,
  SUBELEMENT_SEPARATOR varchar(4) DEFAULT NULL,
  SEGMENT_TERMINATOR varchar(4) DEFAULT NULL,
  RELEASE_CHARACTER varchar(4) DEFAULT NULL,
  DECIMAL_SEPARATOR varchar(4) DEFAULT NULL,
  REPEATING_ELEMENT_SEPARATOR varchar(4) DEFAULT NULL,
  PRIMARY KEY (ID)
  )
;


-- -----------------------------------------------------
-- Table `LW_EDI_DOCUMENT`
-- -----------------------------------------------------
CREATE TABLE LW_EDI_DOCUMENT (
  CLIENT_ID INT NOT NULL,
  WFID BIGINT NOT NULL,
  OUT_WFID BIGINT NOT NULL,
  INT_SENDER_ID VARCHAR(50) NOT NULL,
  INT_RECEIVER_ID VARCHAR(50) NOT NULL,
  INT_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  GRP_SENDER_ID VARCHAR(50) NULL DEFAULT NULL,
  GRP_RECEIVER_ID VARCHAR(50) NULL DEFAULT NULL,
  GRP_FUNCTION_ID VARCHAR(20) NULL DEFAULT NULL,
  GRP_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  TRN_TYPE VARCHAR(20) NULL DEFAULT NULL,
  TRN_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  STATUS VARCHAR(20) NULL DEFAULT NULL,
  ACK_WFID BIGINT NULL DEFAULT NULL,
  ACK_INT_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_GRP_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_TRN_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_NUM_INC BIGINT NULL DEFAULT NULL,
  ACK_NUM_REC BIGINT NULL DEFAULT NULL,
  ACK_NUM_ACC BIGINT NULL DEFAULT NULL,
  LAST_DATE_TIME TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  OVERDUE_DATE_TIME TIMESTAMP WITH DEFAULT NULL,
  GRP_DATE_TIME TIMESTAMP WITH DEFAULT NULL,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX LW_EDI_DOCUMENT_GROUP_IDX ON LW_EDI_DOCUMENT (GRP_SENDER_ID ASC, GRP_RECEIVER_ID ASC, GRP_FUNCTION_ID ASC, GRP_CONTROL_ID ASC);
CREATE INDEX IDX_EDI_DOCUMENT_CLIENT_ID ON LW_EDI_DOCUMENT (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_EVENT`
-- -----------------------------------------------------
CREATE TABLE LW_EVENT (
  ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  PARENT_WFID BIGINT NOT NULL,
  EVENT VARCHAR(255) NOT NULL,
  EVENT_INFO VARCHAR(255) NULL DEFAULT NULL,
  USER_ID VARCHAR(255) NULL DEFAULT NULL,
  WFID BIGINT NULL DEFAULT NULL,
  DOCUMENT_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_SIZE BIGINT NULL DEFAULT NULL,
  PROCESS_DATA BLOB(200000000) NULL DEFAULT NULL,
  EVENT_DATE_TIME TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  DOCUMENT_ENCODING VARCHAR(255) NOT NULL DEFAULT 'UTF-8',
  PRIMARY KEY (ID)
 )
;

CREATE INDEX LW_IDX_EVENT_ID_EVENT_TIME ON LW_EVENT (EVENT_DATE_TIME ASC);
CREATE INDEX LW_IDX_EVENT_PARENT_WFID ON LW_EVENT (PARENT_WFID ASC);
CREATE INDEX LW_IDX_EVENT_CLIENT_ID ON LW_EVENT (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_FTPGET_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_FTPGET_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  BPNAME VARCHAR(128) NOT NULL,
  PROFILE VARCHAR(64) NOT NULL,
  BASE_DIR VARCHAR(64) NULL DEFAULT NULL,
  DIR_LIST VARCHAR(255) NULL DEFAULT NULL,
  FILE_LIST VARCHAR(255) NOT NULL,
  DELETE_FLAG CHAR(1) NULL DEFAULT 'Y',
  ARCHIVE_DIR VARCHAR(64) NULL DEFAULT NULL,
  TRANSFER_TYPE VARCHAR(6) NULL DEFAULT NULL,
  CLIENT_ADAPTER VARCHAR(128) NULL DEFAULT NULL,
  QUOTE_CMD VARCHAR(255) NULL DEFAULT NULL,
  ZERO_BYTE_MSG VARCHAR(45) NULL DEFAULT NULL,
  IS_UNIQUE_ARCHIVE SMALLINT NULL DEFAULT NULL,
  SSL_NEG VARCHAR(45) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_FTPGET_RULE_CLIENT_ID ON LW_FTPGET_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_IDENTITIES`
-- -----------------------------------------------------
CREATE TABLE LW_IDENTITIES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  IDENTIFIER VARCHAR(255) NULL DEFAULT NULL,
  NAME VARCHAR(255) NULL DEFAULT NULL ,
  NOTES CLOB NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  PARENT_IDENTIFIER VARCHAR(255) WITH DEFAULT NULL,
  PRIMARY KEY (ID))
;

CREATE UNIQUE INDEX IDX_IDENTITIES_CLIENT_IDENT_UNIQUE ON LW_IDENTITIES (CLIENT_ID, IDENTIFIER);

-- -----------------------------------------------------
-- Table `LW_IDENTITIES_FIELDS`
-- -----------------------------------------------------

CREATE TABLE LW_IDENTITY_FIELDS (
 ID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
 CLIENT_ID int NOT NULL,
 IDENT_KEY varchar(45) NOT NULL,
 DESCRIPTION varchar(1000) DEFAULT NULL,
 IS_REQUIRED smallint NOT NULL DEFAULT '0',
 DISPLAY_ORDER int NOT NULL DEFAULT '0',
 PRIMARY KEY (ID)
) ;

CREATE INDEX IDX_IDENTITY_FIELDS_CLIENT_ID ON LW_IDENTITY_FIELDS (CLIENT_ID);
CREATE INDEX IDX_IDENTITY_FIELDS_KEY ON LW_IDENTITY_FIELDS (IDENT_KEY);

-- -----------------------------------------------------
-- Table `LW_IDENTITY_EXT`
-- -----------------------------------------------------

CREATE TABLE LW_IDENTITY_EXT (
  ID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID int NOT NULL,
  IDENTITY_ID int NOT NULL,
  IDENT_FIELD_ID int DEFAULT NULL,
  IDENT_KEY varchar(45) DEFAULT NULL,
  IDENT_VALUE varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT LW_IDENTITY_EXT_FIELD_ID FOREIGN KEY (IDENT_FIELD_ID) REFERENCES LW_IDENTITY_FIELDS (ID) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT LW_IDENTITY_EXT_IDENT_ID FOREIGN KEY (IDENTITY_ID) REFERENCES LW_IDENTITIES (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
) ;

 CREATE INDEX LW_IDENTITY_EXT_IDENT_ID_idx ON LW_IDENTITY_EXT (IDENTITY_ID);
 CREATE INDEX LW_IDENTITY_EXT_FIELD_ID_idx ON LW_IDENTITY_EXT (IDENT_FIELD_ID);


-- -----------------------------------------------------
-- Table `LW_MESSAGE`
-- -----------------------------------------------------
CREATE TABLE LW_MESSAGE (
  CLIENT_ID INT NOT NULL,
  WFID BIGINT NOT NULL,
  DIRECTION CHAR(1) NOT NULL,
  PROTOCOL VARCHAR(255) NULL DEFAULT NULL ,
  PROTOCOL_INFO VARCHAR(255) NULL DEFAULT NULL,
  PARM1_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PARM2_VALUE VARCHAR(255) NULL DEFAULT NULL ,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  FILENAME VARCHAR(255) NULL DEFAULT NULL,
  STATUS VARCHAR(255) NULL DEFAULT NULL,
  STATUS_REASON VARCHAR(255) NULL DEFAULT NULL,
  PARENT_WFID BIGINT NULL DEFAULT NULL,
  ACTION_FLAG CHAR(1) NULL DEFAULT NULL,
  MESSAGE_SIZE BIGINT NULL DEFAULT NULL,
  LAST_DATE_TIME TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX MESSAGE_DIR_IDX ON LW_MESSAGE (DIRECTION ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_DATE_IDX ON LW_MESSAGE (LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_CLIENT_ID ON LW_MESSAGE (CLIENT_ID ASC);
CREATE INDEX MESSAGE_STATUS_IDX ON LW_MESSAGE (STATUS ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_FILENAME_IDX ON LW_MESSAGE (FILENAME ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_PROTOCOL_IDX ON LW_MESSAGE (PROTOCOL ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_CLIENT_WFID_IDX ON LW_MESSAGE (CLIENT_ID ASC, WFID ASC);
CREATE INDEX MESSAGE_PARENT_IDX ON LW_MESSAGE (PARENT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_DATE_WFID_IDX ON LW_MESSAGE (LAST_DATE_TIME, WFID, CLIENT_ID);

-- -----------------------------------------------------
-- Table `LW_MESSAGE_SUMMARY`
-- -----------------------------------------------------

CREATE TABLE LW_MESSAGE_SUMMARY (
  HASH_ID VARCHAR(1000) NOT NULL,
  CLIENT_ID int DEFAULT NULL,
  SUMMARY_DATE TIMESTAMP(0) NOT NULL,
  DIRECTION char(1) NOT NULL,
  PROTOCOL varchar(255) DEFAULT NULL,
  PROTOCOL_INFO varchar(255) DEFAULT NULL,
  PARM1_VALUE varchar(255) DEFAULT NULL,
  PARM2_VALUE varchar(255) DEFAULT NULL,
  STATUS varchar(255) DEFAULT NULL,
  MSG_COUNT int DEFAULT '0',
  TOTAL_DATA_SIZE BIGINT DEFAULT '0',
  DATA_MSG_COUNT int DEFAULT '0',
  DOC_COUNT int DEFAULT '0',
  DATE_CREATED TIMESTAMP(0) NOT NULL,
  SUMMARY_YEAR char(4) NOT NULL,
  SUMMARY_MONTH char(2) NOT NULL,
  SUMMARY_DAY char(2) NOT NULL,
  SUMMARY_HOUR char(2) NOT NULL,
  PRIMARY KEY (HASH_ID)
);

CREATE INDEX LW_MSG_SUM_CLIENT_ID_IDX ON LW_MESSAGE_SUMMARY (CLIENT_ID ASC);
CREATE INDEX LW_MSG_SUM_SUM_DATE_IDX  ON LW_MESSAGE_SUMMARY (SUMMARY_DATE ASC);
CREATE INDEX LW_MSG_SUM_DIRECTION_IDX  ON LW_MESSAGE_SUMMARY (DIRECTION ASC);
CREATE INDEX LW_MSG_SUM_PROT_IDX  ON LW_MESSAGE_SUMMARY (PROTOCOL ASC);
CREATE INDEX LW_MSG_SUM_PROINF_IDX  ON LW_MESSAGE_SUMMARY (PROTOCOL_INFO ASC);
CREATE INDEX LW_MSG_SUM_PARM1_IDX  ON LW_MESSAGE_SUMMARY (PARM1_VALUE ASC);
CREATE INDEX LW_MSG_SUM_PARM2_IDX  ON LW_MESSAGE_SUMMARY (PARM2_VALUE ASC);
CREATE INDEX LW_MSG_SUM_STATUS_IDX  ON LW_MESSAGE_SUMMARY (STATUS ASC);
CREATE INDEX LW_MSG_SUM_YEAR_IDX  ON LW_MESSAGE_SUMMARY (SUMMARY_YEAR ASC);
CREATE INDEX LW_MSG_SUM_MON_IDX  ON LW_MESSAGE_SUMMARY (SUMMARY_MONTH ASC);
CREATE INDEX LW_MSG_SUM_DAY_IDX  ON LW_MESSAGE_SUMMARY (SUMMARY_DAY ASC);
CREATE INDEX LW_MSG_SUM_HOUR_IDX  ON LW_MESSAGE_SUMMARY (SUMMARY_HOUR ASC);

-- -----------------------------------------------------
-- Table `LW_MESSAGE_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_MESSAGE_RESTORE (
  CLIENT_ID INT NULL DEFAULT NULL,
  WFID BIGINT NOT NULL,
  DIRECTION CHAR(1) NULL DEFAULT NULL,
  PROTOCOL VARCHAR(255) NULL DEFAULT NULL ,
  PROTOCOL_INFO VARCHAR(255) NULL DEFAULT NULL,
  PARM1_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PARM2_VALUE VARCHAR(255) NULL DEFAULT NULL,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  FILENAME VARCHAR(255) NULL DEFAULT NULL,
  STATUS VARCHAR(255) NULL DEFAULT NULL,
  STATUS_REASON VARCHAR(255) NULL DEFAULT NULL,
  PARENT_WFID BIGINT NULL DEFAULT NULL,
  ACTION_FLAG CHAR(1) NULL DEFAULT NULL,
  MESSAGE_SIZE VARCHAR(45) NULL DEFAULT NULL,
  LAST_DATE_TIME TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX MESSAGE_RESTORE_CLIENT_ID ON LW_MESSAGE_RESTORE (CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_DIR_IDX ON LW_MESSAGE_RESTORE (DIRECTION ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_DATE_IDX ON LW_MESSAGE_RESTORE (LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_PROTOCOL_IDX ON LW_MESSAGE_RESTORE (PROTOCOL ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_STATUS_IDX ON LW_MESSAGE_RESTORE (STATUS ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_FILENAME_IDX ON LW_MESSAGE_RESTORE (FILENAME ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_RES_CLIENT_WFID_IDX ON LW_MESSAGE_RESTORE (CLIENT_ID ASC, WFID ASC);
CREATE INDEX MESSAGE_RES_PARENT_IDX ON LW_MESSAGE_RESTORE (PARENT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX MESSAGE_DATE_WFID_IDX_RES ON LW_MESSAGE_RESTORE (LAST_DATE_TIME, WFID, CLIENT_ID);

-- -----------------------------------------------------
-- Table `LW_MESSAGE_EXT`
-- -----------------------------------------------------
CREATE TABLE LW_MESSAGE_EXT (
  ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  MESSAGE_WFID BIGINT NOT NULL,
  MSG_KEY VARCHAR(45) NOT NULL,
  MSG_VALUE VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (ID)
) ;

CREATE INDEX IDX_MSG_EXT_WFID ON LW_MESSAGE_EXT (MESSAGE_WFID ASC);
CREATE INDEX IDX_MSG_EXT_CLIENT_ID ON LW_MESSAGE_EXT (CLIENT_ID ASC);
CREATE INDEX IDX_MSG_EXT ON LW_MESSAGE_EXT (CLIENT_ID, MSG_KEY, MSG_VALUE);

-- -----------------------------------------------------
-- Table `LW_MESSAGE_EXT_KEY`
-- -----------------------------------------------------
CREATE TABLE LW_MESSAGE_EXT_KEY (
  CLIENT_ID INT NOT NULL,
  MSG_KEY VARCHAR(45) NOT NULL,
  PRIMARY KEY (CLIENT_ID, MSG_KEY)
   )
;

-- -----------------------------------------------------
-- Table `LW_MESSAGE_EXT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_MESSAGE_EXT_RESTORE (
  ID BIGINT NOT NULL,
  CLIENT_ID INT NOT NULL,
  MESSAGE_WFID BIGINT NOT NULL,
  MSG_KEY VARCHAR(45) DEFAULT NULL,
  MSG_VALUE VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (ID)
) ;

CREATE INDEX IDX_MSG_EXT_RES_WFID ON LW_MESSAGE_EXT_RESTORE (MESSAGE_WFID ASC);
CREATE INDEX IDX_MSG_EXT_RES_CLIENT_ID ON LW_MESSAGE_EXT_RESTORE (CLIENT_ID ASC);
CREATE INDEX IDX_MSG_EXT_RES ON LW_MESSAGE_EXT_RESTORE (CLIENT_ID, MSG_KEY, MSG_VALUE);


-- -----------------------------------------------------
-- Table `LW_NOTIFICATION_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_NOTIFICATION_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(128) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(128) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(128) NULL DEFAULT NULL,
  TYPE VARCHAR(10) NOT NULL,
  PASS_DOCUMENT VARCHAR(10) NOT NULL,
  BP VARCHAR(255) NULL DEFAULT NULL,
  XSLT VARCHAR(255) NULL DEFAULT NULL,
  ADDRESS VARCHAR(255) NOT NULL,
  SUBJECT VARCHAR(255) NULL DEFAULT NULL,
  SENDER VARCHAR(255) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_NOTIFICATION_RULES_CLIENT_ID ON LW_NOTIFICATION_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_NOTIFICATION_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_NOTIFICATION_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  NOTIFICATION_RULE_ID INT NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT FK_LW_NOTIFICATION_BP_PARM_VALUES_LW_NOTIFICATION_RULES1
    FOREIGN KEY (NOTIFICATION_RULE_ID)
    REFERENCES LW_NOTIFICATION_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_LW_NOTIFICATION_BP_PARM_VALUES_LW_NOTIFICATION_RULES1_IDX ON LW_NOTIFICATION_BP_PARM_VALUES (NOTIFICATION_RULE_ID ASC);


-- -----------------------------------------------------
-- Table `LW_PARTNER`
-- -----------------------------------------------------
CREATE TABLE LW_PARTNER (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NOT NULL,
  SOURCE_NAME VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NOT NULL,
  DESTINATION_NAME VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(75) NOT NULL,
  FORMAT VARCHAR(75) NOT NULL DEFAULT '',
  STANDARD VARCHAR(75) NOT NULL DEFAULT '',
  VERSION VARCHAR(75) NOT NULL DEFAULT '',
  DIRECTION CHAR(1) NULL,
  RECEIVE_RULE_ID INT NULL DEFAULT NULL,
  SPLIT_RULE_ID INT NULL DEFAULT NULL,
  ROUTE_RULE_ID INT NULL DEFAULT NULL,
  SEND_RULE_ID INT NULL DEFAULT NULL,
  RECEIVE_RULE_BP_MAP VARCHAR(255) NULL,
  ROUTE_RULE_PRE_BP_MAP VARCHAR(255) NULL,
  ROUTE_RULE_CORE_BP_MAP VARCHAR(255) NULL,
  ROUTE_RULE_POST_BP_MAP VARCHAR(255) NULL,
  ROUTE_RULE_POST_SEND_BP VARCHAR(255) NULL,
  ROUTE_RULE_ERROR_BP VARCHAR(255) NULL,
  SEND_RULE_PRE_SEND_BP VARCHAR(255) NULL,
  SEND_RULE_SEND_BP VARCHAR(255) NULL,
  LAST_DATE_TIME TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID))
;

CREATE UNIQUE INDEX LW_PARTNER_UNIQUE_ROW ON LW_PARTNER (CLIENT_ID , SOURCE_ID , DESTINATION_ID , DOCUMENT_TYPE , FORMAT , STANDARD , VERSION );

-- -----------------------------------------------------
-- Table `LW_RECEIVE_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_RECEIVE_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  PROTOCOL VARCHAR(255) NOT NULL,
  PARM1_VALUE VARCHAR(255) NOT NULL ,
  PARM2_VALUE VARCHAR(255) NULL DEFAULT NULL,
  FILENAME VARCHAR(255) NULL DEFAULT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  BP_OR_MAP VARCHAR(255) NULL DEFAULT NULL,
  USE_ROUTE_FLAG CHAR(1) NULL DEFAULT 'Y',
  ENCODING VARCHAR(20) NULL DEFAULT NULL,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_RECEIVE_RULES_CLIENT_ID ON LW_RECEIVE_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_RECEIVE_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_RECEIVE_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  RECEIVE_RULE_ID INT NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID, RECEIVE_RULE_ID)
 ,
  CONSTRAINT FK_LW_RECEIVE_BP_PARM_VALUES_LW_RECEIVE_RULES1
    FOREIGN KEY (RECEIVE_RULE_ID)
    REFERENCES LW_RECEIVE_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_LW_RECEIVE_BP_PARM_VALUES_LW_RECEIVE_RULES1_IDX ON LW_RECEIVE_BP_PARM_VALUES (RECEIVE_RULE_ID ASC);


-- -----------------------------------------------------
-- Table `LW_PROTOCOL_PARMS`
-- -----------------------------------------------------
CREATE TABLE LW_PROTOCOL_PARMS (
  PROTOCOL VARCHAR(255) NOT NULL,
  DIRECTION CHAR(1) NOT NULL,
  PARM1_NAME VARCHAR(255) NULL DEFAULT NULL,
  PARM2_NAME VARCHAR(255) NULL DEFAULT NULL,
  PARM1_DESCRIPTION VARCHAR(1000) NULL,
  PARM2_DESCRIPTION VARCHAR(1000) NULL,
  PORTAL_PROTOCOL SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (PROTOCOL, DIRECTION))
;


-- -----------------------------------------------------
-- Table `LW_ROUTE_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_ROUTE_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NOT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  TEST_FLAG CHAR(1) NULL DEFAULT NULL,
  ALLOW_DUPLICATE_FLAG CHAR(1) NULL DEFAULT 'Y',
  PRE_BP_OR_MAP VARCHAR(255) NULL DEFAULT NULL,
  CORE_BP_OR_MAP VARCHAR(255) NULL DEFAULT NULL,
  POST_BP_OR_MAP VARCHAR(255) NULL DEFAULT NULL,
  POST_SEND_BP VARCHAR(255) NULL DEFAULT NULL,
  ERROR_BP VARCHAR(255) NULL DEFAULT NULL,
  ALT_DESTINATIONS VARCHAR(1024) NULL DEFAULT NULL,
  SEND_FLAG CHAR(1) NULL DEFAULT 'Y',
  DIRECTION CHAR(1) NOT NULL,
  ACTIVE_FLAG CHAR(1) NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_ROUTE_RULES_CLIENT_ID ON LW_ROUTE_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_ROUTE_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_ROUTE_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  ROUTE_RULE_ID INT NOT NULL,
  ROUTE_BP_TYPE VARCHAR(45) NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT FK_LW_RECEIVE_BP_PARM_VALUES_COPY1_LW_ROUTE_RULES1
    FOREIGN KEY (ROUTE_RULE_ID)
    REFERENCES LW_ROUTE_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_LW_RECEIVE_BP_PARM_VALUES_COPY1_LW_ROUTE_RULES1_IDX ON LW_ROUTE_BP_PARM_VALUES (ROUTE_RULE_ID ASC);
CREATE INDEX ROUTE_TYPE_IDX ON LW_ROUTE_BP_PARM_VALUES (ROUTE_BP_TYPE ASC);


-- -----------------------------------------------------
-- Table `LW_RUN_WINDOW`
-- -----------------------------------------------------
CREATE TABLE LW_RUN_WINDOW (
  BPNAME VARCHAR(255) NOT NULL,
  WFID BIGINT NOT NULL,
  RUN_DATE_TIME TIMESTAMP NOT NULL,
  PRIMARY KEY (BPNAME))
;


-- -----------------------------------------------------
-- Table `LW_SAP_DOCUMENT`
-- -----------------------------------------------------
CREATE TABLE LW_SAP_DOCUMENT (
  CLIENT_ID INT NOT NULL,
  WFID BIGINT NOT NULL,
  PROTOCOL VARCHAR(20) NULL DEFAULT NULL,
  ADAPTER VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(20) NULL DEFAULT NULL,
  DOCNUM VARCHAR(16) NULL DEFAULT NULL,
  DOCREL VARCHAR(4) NULL DEFAULT NULL,
  MANDT VARCHAR(3) NULL DEFAULT NULL,
  TEST CHAR(1) NULL DEFAULT NULL,
  SNDPRN VARCHAR(10) NULL DEFAULT NULL,
  SNDPOR VARCHAR(10) NULL DEFAULT NULL,
  SNDPRT VARCHAR(2) NULL DEFAULT NULL,
  SNDPFC VARCHAR(2) NULL DEFAULT NULL,
  SNDSAD VARCHAR(21) NULL DEFAULT NULL,
  SNDLAD VARCHAR(70) NULL DEFAULT NULL,
  RCVPRN VARCHAR(10) NULL DEFAULT NULL,
  RCVPOR VARCHAR(10) NULL DEFAULT NULL,
  RCVPRT VARCHAR(2) NULL DEFAULT NULL,
  RCVPFC VARCHAR(2) NULL DEFAULT NULL,
  RCVSAD VARCHAR(21) NULL DEFAULT NULL,
  RCVLAD VARCHAR(70) NULL DEFAULT NULL,
  MESTYP VARCHAR(30) NULL DEFAULT NULL,
  STDMES VARCHAR(6) NULL DEFAULT NULL,
  IDOCTYP VARCHAR(30) NULL DEFAULT NULL,
  MESCOD VARCHAR(3) NULL DEFAULT NULL,
  MESFCT VARCHAR(3) NULL DEFAULT NULL,
  STATUS_REASON VARCHAR(70) NULL DEFAULT NULL,
  STATUS_STEP CHAR(1) NULL DEFAULT NULL,
  IDENTIFY_OK CHAR(1) NULL DEFAULT 'N',
  TRANSLATION_OK CHAR(1) NULL DEFAULT 'N',
  ENVELOPE_OK CHAR(1) NULL DEFAULT 'N',
  SEND_OK CHAR(1) NULL DEFAULT 'N',
  ACK_OK CHAR(1) NULL DEFAULT 'N',
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX IDX_SAP_DOCUMENT_CLIENT_ID ON LW_SAP_DOCUMENT (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SAP_ROUTING_INBOUND`
-- -----------------------------------------------------
CREATE TABLE LW_SAP_ROUTING_INBOUND (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  MANDT VARCHAR(3) NULL DEFAULT NULL,
  SNDPRN VARCHAR(10) NULL DEFAULT NULL,
  SNDPOR VARCHAR(10) NULL DEFAULT NULL,
  SNDPRT VARCHAR(2) NULL DEFAULT NULL,
  SNDPFC VARCHAR(2) NULL DEFAULT NULL,
  SNDSAD VARCHAR(21) NULL DEFAULT NULL,
  SNDLAD VARCHAR(70) NULL DEFAULT NULL,
  RCVPRN VARCHAR(10) NULL DEFAULT NULL,
  RCVPOR VARCHAR(10) NULL DEFAULT NULL,
  RCVPRT VARCHAR(2) NULL DEFAULT NULL,
  RCVPFC VARCHAR(2) NULL DEFAULT NULL,
  RCVSAD VARCHAR(21) NULL DEFAULT NULL,
  RCVLAD VARCHAR(70) NULL DEFAULT NULL,
  CIMTYP VARCHAR(30) NULL DEFAULT NULL,
  MESTYP VARCHAR(30) NULL DEFAULT NULL,
  STDMES VARCHAR(6) NULL DEFAULT NULL,
  IDOCTYP VARCHAR(30) NULL DEFAULT NULL,
  MESCOD VARCHAR(3) NULL DEFAULT NULL,
  MESFCT VARCHAR(3) NULL DEFAULT NULL,
  TEST CHAR(1) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SAP_ROUTING_INBOUND_CLIENT_ID ON LW_SAP_ROUTING_INBOUND (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SAP_ROUTING_OUTBOUND`
-- -----------------------------------------------------
CREATE TABLE LW_SAP_ROUTING_OUTBOUND (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SNDPRN VARCHAR(10) NOT NULL DEFAULT '*',
  SNDPOR VARCHAR(10) NOT NULL DEFAULT '*',
  SNDPRT VARCHAR(2) NOT NULL DEFAULT '*',
  SNDPFC VARCHAR(2) NOT NULL DEFAULT '*',
  SNDSAD VARCHAR(21) NOT NULL DEFAULT '*',
  SNDLAD VARCHAR(70) NOT NULL DEFAULT '*',
  RCVPRN VARCHAR(10) NOT NULL DEFAULT '*',
  RCVPOR VARCHAR(10) NOT NULL DEFAULT '*',
  RCVPRT VARCHAR(2) NOT NULL DEFAULT '*',
  RCVPFC VARCHAR(2) NOT NULL DEFAULT '*',
  RCVSAD VARCHAR(21) NOT NULL DEFAULT '*',
  RCVLAD VARCHAR(70) NOT NULL DEFAULT '*',
  MESTYP VARCHAR(30) NOT NULL DEFAULT '*',
  STDMES VARCHAR(6) NOT NULL DEFAULT '*',
  IDOCTYP VARCHAR(30) NOT NULL DEFAULT '*',
  MESCOD VARCHAR(3) NOT NULL DEFAULT '*',
  MESFCT VARCHAR(3) NOT NULL DEFAULT '*',
  TEST CHAR(1) NOT NULL DEFAULT 'P',
  SOURCE_ID VARCHAR(255) NOT NULL DEFAULT '',
  DESTINATION_ID VARCHAR(255) NOT NULL DEFAULT '',
  DOCUMENT_TYPE VARCHAR(255) NOT NULL DEFAULT '',
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SAP_ROUTING_OUTBOUND_CLIENT_ID ON LW_SAP_ROUTING_OUTBOUND (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SAP_STATUS_EXCLUDE`
-- -----------------------------------------------------
CREATE TABLE LW_SAP_STATUS_EXCLUDE (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SAP_STATUS_EXLUDE_CLIENT_ID ON LW_SAP_STATUS_EXCLUDE (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SEND_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_SEND_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL ,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  EDI_STANDARD VARCHAR(32) NULL DEFAULT NULL,
  EDI_STREAM_FLAG CHAR(1) NULL DEFAULT 'N',
  EDI_DEFER_FLAG CHAR(1) NULL DEFAULT 'N',
  EDI_BATCH VARCHAR(32) NULL DEFAULT NULL,
  INITIAL_MESSAGE_STATUS VARCHAR(32) NULL DEFAULT NULL,
  PRE_SEND_BP VARCHAR(255) NULL DEFAULT NULL,
  SEND_BP VARCHAR(255) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SEND_RULES_CLIENT_ID ON LW_SEND_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SEND_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_SEND_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  SEND_RULE_ID INT NOT NULL,
  SEND_BP_TYPE VARCHAR(45) NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT FK_LW_SEND_RULE_PARMS_LW_SEND_RULES1
    FOREIGN KEY (SEND_RULE_ID)
    REFERENCES LW_SEND_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_LW_SEND_RULE_PARMS_LW_SEND_RULES1_IDX ON LW_SEND_BP_PARM_VALUES (SEND_RULE_ID ASC);
CREATE INDEX IDX_SEND_BP_PARMS_BP_TYPE ON LW_SEND_BP_PARM_VALUES (SEND_BP_TYPE ASC);


-- -----------------------------------------------------
-- Table `LW_SOAP_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_SOAP_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  WEB_SERVICE_NAME VARCHAR(128) NOT NULL,
  REQUEST_BPNAME VARCHAR(128) NULL DEFAULT NULL,
  DS_NAME VARCHAR(128) NULL DEFAULT NULL,
  SOAP_BPNAME VARCHAR(128) NULL DEFAULT NULL,
  SOAP_ACTION VARCHAR(128) NULL DEFAULT NULL,
  SOAP_ENVNS_PREFIX VARCHAR(128) NULL DEFAULT NULL,
  SOAP_ENVNS_URI VARCHAR(128) NULL DEFAULT NULL,
  HTTP_PROFILE VARCHAR(128) NULL DEFAULT NULL,
  HTTP_URI VARCHAR(128) NULL DEFAULT NULL,
  HTTP_CLIENT_ADAPTER VARCHAR(128) NULL DEFAULT NULL,
  RESPONSE_BPNAME VARCHAR(128) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SOAP_RULES_CLIENT_ID ON LW_SOAP_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SPLIT_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_SPLIT_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  FORMAT VARCHAR(255) NOT NULL,
  STANDARD VARCHAR(255) NOT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  SPLIT_FLAG CHAR(1) NULL DEFAULT 'Y',
  BP_OR_MAP VARCHAR(255) NULL DEFAULT NULL,
  SYNC_FLAG CHAR(1) NULL DEFAULT 'N',
  USE_GROUP_FLAG CHAR(1) NULL DEFAULT 'N',
  ROUTE_INTERCHANGE CHAR(1) NULL DEFAULT 'N',
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_SPLIT_RULES_CLIENT_ID ON LW_SPLIT_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_X12_OVERRIDES`
-- -----------------------------------------------------
CREATE TABLE LW_X12_OVERRIDES (
  ID INT NOT NULL,
  ALIAS VARCHAR(35) NULL DEFAULT NULL,
  DOC_ENCODING VARCHAR(20) NULL DEFAULT NULL,
  TRANSACTION_SET_ID_CODE VARCHAR(3) NULL DEFAULT NULL,
  GRP_ACK_OVERDUE_TIME_MINUTES VARCHAR(4) NULL DEFAULT NULL,
  GRP_ACK_OVERDUE_TIME VARCHAR(3) NULL DEFAULT NULL,
  GRP_EXPECT_ACK VARCHAR(3) NULL DEFAULT NULL,
  GRP_FUNCTIONAL_ID_CODE VARCHAR(2) NULL DEFAULT NULL,
  GRP_RECEIVER_ID VARCHAR(15) NULL DEFAULT NULL,
  GRP_RESPONSIBLE_AGENCY_CODE VARCHAR(2) NULL DEFAULT NULL,
  GRP_SENDER_ID VARCHAR(15) NULL DEFAULT NULL,
  GRP_VERSION_RELEASE_ID_CODE VARCHAR(12) NULL DEFAULT NULL,
  INT_ACK_OVERDUE_TIME VARCHAR(3) NULL DEFAULT NULL,
  INT_ACK_OVERDUE_TIME_MINUTES VARCHAR(2) NULL DEFAULT NULL,
  INT_ACK_REQUESTED VARCHAR(3) NULL DEFAULT NULL,
  INT_AUTH_INFORMATION VARCHAR(10) NULL DEFAULT NULL,
  INT_AUTH_INFO_QUAL VARCHAR(2) NULL DEFAULT NULL,
  INT_CONTROL_STANDARDS_ID VARCHAR(1) NULL DEFAULT NULL,
  INT_CONTROL_VER_NUM VARCHAR(5) NULL DEFAULT NULL,
  INT_RECEIVER_ID_QUAL VARCHAR(2) NULL DEFAULT NULL,
  INT_RECEIVER_ID VARCHAR(15) NULL DEFAULT NULL,
  INT_SECURITY_INFORMATION VARCHAR(10) NULL DEFAULT NULL,
  INT_SECURITY_INFO_QUAL VARCHAR(2) NULL DEFAULT NULL,
  INT_SENDER_ID_QUAL VARCHAR(2) NULL DEFAULT NULL,
  INT_SENDER_ID VARCHAR(15) NULL DEFAULT NULL,
  INT_TEST_INDICATOR VARCHAR(1) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP NULL DEFAULT NULL,
  USERNAME VARCHAR(45) NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  ELEMENT_SEPARATOR VARCHAR(4) DEFAULT NULL,
  SUBELEMENT_SEPARATOR VARCHAR(4) DEFAULT NULL,
  SEGMENT_TERMINATOR VARCHAR(4) DEFAULT NULL,
  PRIMARY KEY (ID))
;


-- -----------------------------------------------------
-- Table `LW_TRADACOMS_OVERRIDES`
-- -----------------------------------------------------
CREATE TABLE LW_TRADACOMS_OVERRIDES (
  ID INT NOT NULL,
  ALIAS VARCHAR(35) DEFAULT NULL,
  MSG_MHD_TYPE VARCHAR(6) DEFAULT NULL,
  MSG_TYP_TCDE VARCHAR(4) DEFAULT NULL,
  MSG_TYP_TTYP VARCHAR(12) DEFAULT NULL,
  MSG_SDT_SIDN1 VARCHAR(13) DEFAULT NULL,
  MSG_SDT_SIDN2 VARCHAR(17) DEFAULT NULL,
  MSG_SDT_SNAM VARCHAR(40) DEFAULT NULL,
  MSG_SDT_SADD1 VARCHAR(35) DEFAULT NULL,
  MSG_SDT_SADD2 VARCHAR(35) DEFAULT NULL,
  MSG_SDT_SADD3 VARCHAR(35) DEFAULT NULL,
  MSG_SDT_SADD4 VARCHAR(35) DEFAULT NULL,
  MSG_SDT_SADD5 VARCHAR(8) DEFAULT NULL,
  MSG_SDT_VATN1 VARCHAR(9) DEFAULT NULL,
  MSG_SDT_VATN2 VARCHAR(17) DEFAULT NULL,
  MSG_CDT_CIDN1 VARCHAR(13) DEFAULT NULL,
  MSG_CDT_CIDN2 VARCHAR(17) DEFAULT NULL,
  MSG_CDT_CNAM VARCHAR(40) DEFAULT NULL,
  MSG_CDT_CADD1 VARCHAR(35) DEFAULT NULL,
  MSG_CDT_CADD2 VARCHAR(35) DEFAULT NULL,
  MSG_CDT_CADD3 VARCHAR(35) DEFAULT NULL,
  MSG_CDT_CADD4 VARCHAR(35) DEFAULT NULL,
  MSG_CDT_CADD5 VARCHAR(8) DEFAULT NULL,
  MSG_CDT_VATR1 VARCHAR(9) DEFAULT NULL,
  MSG_CDT_VATR2 VARCHAR(17) DEFAULT NULL,
  MSG_BDT_BKIC VARCHAR(2) DEFAULT NULL,
  MSG_BDT_BNAM VARCHAR(35) DEFAULT NULL,
  MSG_BDT_SVID1 VARCHAR(6) DEFAULT NULL,
  MSG_BDT_SVID2 VARCHAR(8) DEFAULT NULL,
  MSG_BDT_BKIN VARCHAR(17) DEFAULT NULL,
  MSG_BDT_CD31 VARCHAR(3) DEFAULT NULL,
  MSG_ACD_INLO1 VARCHAR(13) DEFAULT NULL,
  MSG_ACD_INLO2 VARCHAR(17) DEFAULT NULL,
  INT_STX_STDS1 VARCHAR(4) DEFAULT NULL,
  INT_STX_STDS2 VARCHAR(1) DEFAULT NULL,
  INT_STX_FROM1 VARCHAR(14) DEFAULT NULL,
  INT_STX_FROM2 VARCHAR(35) DEFAULT NULL,
  INT_STX_UNTO1 VARCHAR(14) DEFAULT NULL,
  INT_STX_UNTO2 VARCHAR(35) DEFAULT NULL,
  INT_STX_RCRF VARCHAR(14) DEFAULT NULL,
  INT_STX_APRF VARCHAR(14) DEFAULT NULL,
  INT_STX_PRCD VARCHAR(1) DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) DEFAULT NULL,
  USERNAME VARCHAR(45) DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  PRIMARY KEY (ID)
) ;

-- -----------------------------------------------------
-- Table `LW_XML_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_XML_RULES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  ROOT_TAG VARCHAR(255) NOT NULL,
  CHILD_TAG VARCHAR(255) NOT NULL,
  XSLT VARCHAR(100) NULL DEFAULT NULL,
  SOURCE_ID VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NULL DEFAULT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  TEST_FLAG VARCHAR(255) NULL DEFAULT NULL,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  RULE_VERSION INT NOT NULL WITH DEFAULT 1,
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  XPATH VARCHAR(32672) NULL,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_XML_RULES_CLIENT_ID ON LW_XML_RULES (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_DOCUMENT_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  DOCUMENT_RULE_ID INT NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT fk_LW_DOCUMENT_BP_PARM_VALUES_LW_DOCUMENT_RULES1
    FOREIGN KEY (DOCUMENT_RULE_ID)
    REFERENCES LW_DOCUMENT_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_LW_DOCUMENT_BP_PARM_VALUES_LW_DOCUMENT_RULES1_idx ON LW_DOCUMENT_BP_PARM_VALUES (DOCUMENT_RULE_ID ASC);


-- -----------------------------------------------------
-- Table `LW_SPLIT_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_SPLIT_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  SPLIT_RULE_ID INT NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT fk_LW_SPLIT_BP_PARM_VALUES_LW_SPLIT_RULES1
    FOREIGN KEY (SPLIT_RULE_ID)
    REFERENCES LW_SPLIT_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX FK_LW_SPLIT_BP_PARM_VALUES_LW_SPLIT_RULES1_idx ON LW_SPLIT_BP_PARM_VALUES (SPLIT_RULE_ID ASC);


-- -----------------------------------------------------
-- Table `LW_PORTAL_AUDIT`
-- -----------------------------------------------------
CREATE TABLE LW_PORTAL_AUDIT (
  WFID BIGINT NOT NULL DEFAULT '0',
  USER_ID VARCHAR(36) NOT NULL DEFAULT '',
  COMMUNITY VARCHAR(255) NOT NULL DEFAULT '',
  APPLICATION VARCHAR(255) NOT NULL DEFAULT '',
  ACTION VARCHAR(255) NOT NULL DEFAULT '',
  IP_ADDRESS VARCHAR(255) NULL DEFAULT NULL,
  AUDIT_NOTE VARCHAR(255) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (WFID)
 )
;


-- -----------------------------------------------------
-- Table `LW_PORTAL_RULES`
-- -----------------------------------------------------
CREATE TABLE LW_PORTAL_RULES (
  ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  USER_ID VARCHAR(36) NULL DEFAULT NULL,
  COMMUNITY VARCHAR(255) NULL DEFAULT NULL,
  APPLICATION VARCHAR(255) NOT NULL DEFAULT '',
  ACTION VARCHAR(255) NOT NULL DEFAULT '',
  ACTION_BP VARCHAR(255) NULL DEFAULT NULL,
  SYNC_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  AUDIT_FLAG CHAR(1) NOT NULL DEFAULT 'N',
  RESPONSE_TYPE VARCHAR(255) NOT NULL DEFAULT 'text/xml',
  USERNAME VARCHAR(45) NULL DEFAULT NULL,
  TIMESTAMP TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  ACTIVE_FLAG CHAR(1) NOT NULL DEFAULT 'Y',
  PRIMARY KEY (ID)
 )
;


-- -----------------------------------------------------
-- Table `LW_SOAP_BP_PARM_VALUES`
-- -----------------------------------------------------
CREATE TABLE LW_SOAP_BP_PARM_VALUES (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  SOAP_RULE_ID INT NOT NULL,
  SOAP_BP_TYPE VARCHAR(45) NOT NULL,
  PARM_KEY VARCHAR(255) NULL DEFAULT NULL,
  PARM_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 ,
  CONSTRAINT fk_LW_SOAP_BP_PARM_VALUES_LW_SOAP_RULES1
    FOREIGN KEY (SOAP_RULE_ID)
    REFERENCES LW_SOAP_RULES (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX IDX_SOAP_BP_PARMS_BP_TYPE ON LW_SOAP_BP_PARM_VALUES (SOAP_BP_TYPE ASC);
CREATE INDEX FK_LW_SOAP_BP_PARM_VALUES_LW_SOAP_RULES1_idx ON LW_SOAP_BP_PARM_VALUES (SOAP_RULE_ID ASC);


-- -----------------------------------------------------
-- Table `LW_DOCUMENT_SUMMARY`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_SUMMARY (
  HASH_ID VARCHAR(1000) NOT NULL,
  CLIENT_ID INT NOT NULL,
  SUMMARY_DATE TIMESTAMP(0) NOT NULL,
  SOURCE_ID VARCHAR(255) NOT NULL,
  DESTINATION_ID VARCHAR(255) NOT NULL,
  DOCUMENT_TYPE VARCHAR(255) NOT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_STATUS VARCHAR(255) NOT NULL,
  CURRENCY_CODE VARCHAR(45) NULL DEFAULT NULL,
  DIRECTION CHAR(1) NOT NULL,
  TOTAL_DOCUMENTS INT NOT NULL,
  TOTAL_FINANCIAL DECIMAL(18,2) NOT NULL,
  FINANCIAL_DOC_COUNT INT NOT NULL,
  TOTAL_FINAL_DATA_SIZE BIGINT NOT NULL,
  TOTAL_ORIGINAL_DATA_SIZE BIGINT NOT NULL,
  DATA_DOC_COUNT INT NOT NULL,
  DATE_CREATED TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  SUMMARY_YEAR CHAR(4) NOT NULL,
  SUMMARY_MONTH CHAR(2) NOT NULL,
  SUMMARY_DAY CHAR(2) NOT NULL,
  SUMMARY_HOUR CHAR(2) NOT NULL,
  PRIMARY KEY (HASH_ID))
;

CREATE INDEX LW_DOC_SUM_CLIENT_ID_IDX ON LW_DOCUMENT_SUMMARY (CLIENT_ID ASC);
CREATE INDEX LW_DOC_SUM_SUM_DATE_IDX  ON LW_DOCUMENT_SUMMARY (SUMMARY_DATE ASC);
CREATE INDEX LW_DOC_SUM_SRC_ID_IDX  ON LW_DOCUMENT_SUMMARY (SOURCE_ID ASC);
CREATE INDEX LW_DOC_SUM_DEST_ID_IDX  ON LW_DOCUMENT_SUMMARY (DESTINATION_ID ASC);
CREATE INDEX LW_DOC_SUM_DOC_TYPE_IDX  ON LW_DOCUMENT_SUMMARY (DOCUMENT_TYPE ASC);
CREATE INDEX LW_DOC_SUM_FORMAT_IDX  ON LW_DOCUMENT_SUMMARY (FORMAT ASC);
CREATE INDEX LW_DOC_SUM_STD_IDX  ON LW_DOCUMENT_SUMMARY (STANDARD ASC);
CREATE INDEX LW_DOC_SUM_VERSION_IDX  ON LW_DOCUMENT_SUMMARY (VERSION ASC);
CREATE INDEX LW_DOC_SUM_DOC_STATUS_IDX  ON LW_DOCUMENT_SUMMARY (DOCUMENT_STATUS ASC);
CREATE INDEX LW_DOC_SUM_CURRENCY_IDX  ON LW_DOCUMENT_SUMMARY (CURRENCY_CODE ASC);
CREATE INDEX LW_DOC_SUM_DIRECTION_IDX  ON LW_DOCUMENT_SUMMARY (DIRECTION ASC);
CREATE INDEX LW_DOC_SUM_SUM_YEAR_IDX  ON LW_DOCUMENT_SUMMARY (SUMMARY_YEAR ASC);
CREATE INDEX LW_DOC_SUM_SUM_MON_IDX  ON LW_DOCUMENT_SUMMARY (SUMMARY_MONTH ASC);
CREATE INDEX LW_DOC_SUM_SUM_DAY_IDX  ON LW_DOCUMENT_SUMMARY (SUMMARY_DAY ASC);
CREATE INDEX LW_DOC_SUM_SUM_HOUR_IDX  ON LW_DOCUMENT_SUMMARY (SUMMARY_HOUR ASC);

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_RESTORE (
  CLIENT_ID INT NULL DEFAULT NULL,
  WFID BIGINT NOT NULL,
  IN_WFID BIGINT NULL DEFAULT NULL,
  OUT_WFID BIGINT NULL DEFAULT NULL,
  SOURCE_ID VARCHAR(255) NOT NULL,
  SOURCE_NAME VARCHAR(255) NULL DEFAULT NULL,
  DESTINATION_ID VARCHAR(255) NOT NULL,
  DESTINATION_NAME VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_TYPE VARCHAR(255) NOT NULL,
  FORMAT VARCHAR(255) NULL DEFAULT NULL,
  STANDARD VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(255) NULL DEFAULT NULL,
  TEST_FLAG CHAR(1) NULL DEFAULT 'N',
  PARENT_WFID BIGINT NULL DEFAULT NULL,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  ALT_REF VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_DATE DATE NULL DEFAULT NULL,
  DOCUMENT_TIME TIME NULL DEFAULT NULL,
  STATUS VARCHAR(255) NOT NULL,
  STATUS_REASON VARCHAR(255) NULL DEFAULT NULL,
  ACTION_FLAG CHAR(1) NULL DEFAULT NULL,
  ORIGINAL_SIZE BIGINT NULL DEFAULT NULL,
  FINAL_SIZE BIGINT NULL DEFAULT NULL,
  INTERCHANGE_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  GROUP_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  TRANSACTION_NUMBER VARCHAR(45) NULL DEFAULT NULL,
  DOCUMENT_VALUE DECIMAL(18,5) NULL DEFAULT NULL,
  CURRENCY_CODE CHAR(3) NULL DEFAULT NULL,
  DIRECTION CHAR(1) NOT NULL,
  LAST_DATE_TIME TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  TRANSACTION_LAST_DATE_TIME TIMESTAMP(0) NOT NULL,
  TRANSACTION_STATUS VARCHAR(255) NOT NULL,
  TRANSACTION_STATUS_REASON VARCHAR(255) DEFAULT NULL,
  DOCUMENT_CREATION_DATE TIMESTAMP(0) DEFAULT NULL,
  DOCUMENT_COUNT INT NOT NULL DEFAULT 1,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX LW_DOC_RES_IDX_SID ON LW_DOCUMENT_RESTORE (SOURCE_ID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_SNAME ON LW_DOCUMENT_RESTORE (SOURCE_NAME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_DID ON LW_DOCUMENT_RESTORE (DESTINATION_ID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_DNAME ON LW_DOCUMENT_RESTORE (DESTINATION_NAME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_STATUS ON LW_DOCUMENT_RESTORE (STATUS ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_DTYPE ON LW_DOCUMENT_RESTORE (DOCUMENT_TYPE ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_PAR_WFID ON LW_DOCUMENT_RESTORE (PARENT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_IN_WFID ON LW_DOCUMENT_RESTORE (IN_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_OUT_WFID ON LW_DOCUMENT_RESTORE (OUT_WFID ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_LAST_DATE_TIME ON LW_DOCUMENT_RESTORE (LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOCUMENT_RESTORE_IDX_CLIENT_ID ON LW_DOCUMENT_RESTORE (CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_TRANS_DATE_TIME ON LW_DOCUMENT_RESTORE (TRANSACTION_LAST_DATE_TIME ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_TRANS_STATUS ON LW_DOCUMENT_RESTORE (TRANSACTION_STATUS ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_REF ON LW_DOCUMENT_RESTORE (REFERENCE ASC, CLIENT_ID ASC);
CREATE INDEX LW_DOC_RES_IDX_ALTREF ON LW_DOCUMENT_RESTORE (ALT_REF ASC, CLIENT_ID ASC);

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_EXT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_EXT_RESTORE (
  ID BIGINT NOT NULL,
  CLIENT_ID INT NOT NULL,
  DOCUMENT_WFID BIGINT NOT NULL,
  DOC_KEY VARCHAR(45) NULL DEFAULT NULL,
  DOC_VALUE VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX IDX_DOCUMENT_EXT_RESTORE_CLIENT_ID ON LW_DOCUMENT_EXT_RESTORE (CLIENT_ID ASC);
CREATE INDEX IDX_DOCUMENT_EXT_RESTORE_DOC_WFID ON LW_DOCUMENT_EXT_RESTORE (DOCUMENT_WFID ASC);
CREATE INDEX IDX_DOC_EXT_RES ON LW_DOCUMENT_EXT_RESTORE (CLIENT_ID, DOC_KEY, DOC_VALUE);

-- -----------------------------------------------------
-- Table `LW_DOCUMENT_NOTES_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_DOCUMENT_NOTES_RESTORE (
  ID INT NOT NULL,
  DOC_WFID BIGINT NOT NULL,
  NOTE VARCHAR(1000) NOT NULL,
  DATE_CREATED TIMESTAMP NOT NULL,
  PRIMARY KEY (ID))
  ;

-- -----------------------------------------------------
-- Table `LW_DOCREFLIST_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_DOCREFLIST_RESTORE (
  ID BIGINT NOT NULL,
  WFID BIGINT NOT NULL,
  REFERENCE VARCHAR(255) NULL DEFAULT NULL,
  ALT_REF VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (ID)
 )
;

CREATE INDEX LW_DOCREFLIST_RESTORE_REF_IDX ON LW_DOCREFLIST_RESTORE (WFID ASC, REFERENCE ASC);
CREATE INDEX LW_DOCREFLIST_RESTORE_ALTREF_IDX ON LW_DOCREFLIST_RESTORE (WFID ASC, ALT_REF ASC);


-- -----------------------------------------------------
-- Table `LW_BP_PARMS`
-- -----------------------------------------------------
CREATE TABLE LW_BP_PARMS (
  CLIENT_ID INT NOT NULL DEFAULT 0,
  BP_NAME VARCHAR(255) NOT NULL,
  PARM_KEY VARCHAR(255) NOT NULL,
  PARM_NAME VARCHAR(255) NOT NULL,
  PARM_DESCRIPTION VARCHAR(1000) NULL,
  DISPLAY_ORDER INT NOT NULL,
  IS_FRAMEWORK SMALLINT NOT NULL DEFAULT 0,
  PRIMARY KEY (CLIENT_ID, BP_NAME, PARM_KEY))
;


-- -----------------------------------------------------
-- Table `LW_EDI_DOCUMENT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_EDI_DOCUMENT_RESTORE (
  CLIENT_ID INT NULL DEFAULT NULL,
  WFID BIGINT NOT NULL,
  OUT_WFID BIGINT NOT NULL,
  INT_SENDER_ID VARCHAR(50) NOT NULL,
  INT_RECEIVER_ID VARCHAR(50) NOT NULL,
  INT_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  GRP_SENDER_ID VARCHAR(50) NULL DEFAULT NULL,
  GRP_RECEIVER_ID VARCHAR(50) NULL DEFAULT NULL,
  GRP_FUNCTION_ID VARCHAR(20) NULL DEFAULT NULL,
  GRP_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  TRN_TYPE VARCHAR(20) NULL DEFAULT NULL,
  TRN_CONTROL_ID VARCHAR(20) NULL DEFAULT NULL,
  STATUS VARCHAR(20) NULL DEFAULT NULL,
  ACK_WFID BIGINT NULL DEFAULT NULL,
  ACK_INT_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_GRP_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_TRN_CTRL_ID VARCHAR(20) NULL DEFAULT NULL,
  ACK_NUM_INC BIGINT NULL DEFAULT NULL,
  ACK_NUM_REC BIGINT NULL DEFAULT NULL,
  ACK_NUM_ACC BIGINT NULL DEFAULT NULL,
  LAST_DATE_TIME TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  OVERDUE_DATE_TIME TIMESTAMP WITH DEFAULT NULL,
  GRP_DATE_TIME TIMESTAMP WITH DEFAULT NULL,
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX IDX_EDI_DOCUMENT_RESTORE_CLIENT_ID ON LW_EDI_DOCUMENT_RESTORE (CLIENT_ID ASC);
CREATE INDEX IDX_EDI_DOCUMENT_RESTORE_LAST_DATE_TIME ON LW_EDI_DOCUMENT_RESTORE (LAST_DATE_TIME ASC);


-- -----------------------------------------------------
-- Table `LW_SAP_DOCUMENT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_SAP_DOCUMENT_RESTORE (
  CLIENT_ID INT NULL DEFAULT NULL,
  WFID BIGINT NOT NULL,
  PROTOCOL VARCHAR(20) NULL DEFAULT NULL,
  ADAPTER VARCHAR(255) NULL DEFAULT NULL,
  VERSION VARCHAR(20) NULL DEFAULT NULL,
  DOCNUM VARCHAR(16) NULL DEFAULT NULL,
  DOCREL VARCHAR(4) NULL DEFAULT NULL,
  MANDT VARCHAR(3) NULL DEFAULT NULL,
  TEST CHAR(1) NULL DEFAULT NULL,
  SNDPRN VARCHAR(10) NULL DEFAULT NULL,
  SNDPOR VARCHAR(10) NULL DEFAULT NULL,
  SNDPRT VARCHAR(2) NULL DEFAULT NULL,
  SNDPFC VARCHAR(2) NULL DEFAULT NULL,
  SNDSAD VARCHAR(21) NULL DEFAULT NULL,
  SNDLAD VARCHAR(70) NULL DEFAULT NULL,
  RCVPRN VARCHAR(10) NULL DEFAULT NULL,
  RCVPOR VARCHAR(10) NULL DEFAULT NULL,
  RCVPRT VARCHAR(2) NULL DEFAULT NULL,
  RCVPFC VARCHAR(2) NULL DEFAULT NULL,
  RCVSAD VARCHAR(21) NULL DEFAULT NULL,
  RCVLAD VARCHAR(70) NULL DEFAULT NULL,
  MESTYP VARCHAR(30) NULL DEFAULT NULL,
  STDMES VARCHAR(6) NULL DEFAULT NULL,
  IDOCTYP VARCHAR(30) NULL DEFAULT NULL,
  MESCOD VARCHAR(3) NULL DEFAULT NULL,
  MESFCT VARCHAR(3) NULL DEFAULT NULL,
  STATUS_REASON VARCHAR(70) NULL DEFAULT NULL,
  STATUS_STEP CHAR(1) NULL DEFAULT NULL,
  IDENTIFY_OK CHAR(1) NULL DEFAULT 'N',
  TRANSLATION_OK CHAR(1) NULL DEFAULT 'N',
  ENVELOPE_OK CHAR(1) NULL DEFAULT 'N',
  SEND_OK CHAR(1) NULL DEFAULT 'N',
  ACK_OK CHAR(1) NULL DEFAULT 'N',
  PRIMARY KEY (WFID)
 )
;

CREATE INDEX IDX_SAP_DOCUMENT_RESTORE_CLIENT_ID ON LW_SAP_DOCUMENT_RESTORE (CLIENT_ID ASC);


-- -----------------------------------------------------
-- Table `LW_EVENT_RESTORE`
-- -----------------------------------------------------
CREATE TABLE LW_EVENT_RESTORE (
  ID INT NOT NULL,
  CLIENT_ID INT NULL DEFAULT NULL,
  PARENT_WFID BIGINT NOT NULL,
  EVENT VARCHAR(255) NOT NULL,
  EVENT_INFO VARCHAR(255) NULL DEFAULT NULL,
  USER_ID VARCHAR(255) NULL DEFAULT NULL,
  WFID BIGINT NULL DEFAULT NULL,
  DOCUMENT_ID VARCHAR(255) NULL DEFAULT NULL,
  DOCUMENT_SIZE BIGINT NULL DEFAULT NULL,
  PROCESS_DATA BLOB(200000000) NULL DEFAULT NULL,
  EVENT_DATE_TIME TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  DOCUMENT_ENCODING VARCHAR(255) NOT NULL DEFAULT 'UTF-8',
  PRIMARY KEY (ID)
 )
;

CREATE INDEX LW_IDX_EVENT_RESTORE_ID_EVENT_TIME ON LW_EVENT_RESTORE (EVENT_DATE_TIME ASC);
CREATE INDEX LW_IDX_EVENT_RESTORE_PARENT_WFID ON LW_EVENT_RESTORE (PARENT_WFID ASC);
CREATE INDEX LW_IDX_EVENT_RESTORE_CLIENT_ID ON LW_EVENT_RESTORE (CLIENT_ID ASC);

-- -----------------------------------------------------
-- Table LW_RULE_VERSIONS
-- -----------------------------------------------------
CREATE TABLE LW_RULE_VERSIONS (
  CLIENT_ID INT NOT NULL,
  RULE_TYPE VARCHAR(45) NOT NULL,
  RULE_ID INT NOT NULL,
  VERSION INT NOT NULL,
  JSON_OBJECT CLOB(64K) NOT NULL,
  CREATED_BY VARCHAR(45) NOT NULL,
  CREATED TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (CLIENT_ID,RULE_TYPE,RULE_ID,VERSION)
);

-- -----------------------------------------------------
-- Table LW_TEMP
-- -----------------------------------------------------
CREATE TABLE LW_TEMP (
  ID int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  WFID bigint NOT NULL,
  FIELD1 varchar(255) DEFAULT NULL,
  FIELD2 varchar(255) DEFAULT NULL,
  FIELD3 varchar(255) DEFAULT NULL,
  FIELD4 varchar(255) DEFAULT NULL,
  FIELD5 varchar(255) DEFAULT NULL,
  FIELD6 varchar(255) DEFAULT NULL,
  FIELD7 varchar(255) DEFAULT NULL,
  FIELD8 varchar(255) DEFAULT NULL,
  FIELD9 varchar(255) DEFAULT NULL,
  FIELD10 varchar(255) DEFAULT NULL,
  PRIMARY KEY (ID)
) ;

CREATE INDEX LW_TEMP_IDX_WFID ON LW_TEMP (WFID ASC);


  -- -----------------------------------------
  -- Create the document summarization procedure
  -- -----------------------------------------

 --#SET TERMINATOR $

  CREATE PROCEDURE LW_SUMMARIZE_DOCUMENTS (IN daysSummarized INT)
  	LANGUAGE SQL
  BEGIN

  	DECLARE startDate TIMESTAMP(0);
  	set startDate = TIMESTAMP_FORMAT(VARCHAR_FORMAT(CURRENT TIMESTAMP - daysSummarized DAYS, 'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24');

  	MERGE INTO LW_DOCUMENT_SUMMARY AS T
  	  	USING (
  	  	select
  	  		 HASH_ID,
  	  		 CLIENT_ID,
  	  	     SUMMARY_DATE,
  	  	     SOURCE_ID,
  	  	     DESTINATION_ID,
  	  	     DOCUMENT_TYPE,
  	  	     FORMAT,
  	  	     STANDARD,
  	  	     VERSION,
  	  	     DOCUMENT_STATUS,
  	  	     CURRENCY_CODE CURRENCY_CODE,
  	  	     DIRECTION,
  	  	     COALESCE(TOTAL_DOCUMENTS, 0) TOTAL_DOCUMENTS,
  	  	     COALESCE(TOTAL_FINANCIAL, 0) TOTAL_FINANCIAL,
  	  	     COALESCE(FINANCIAL_DOC_COUNT, 0) FINANCIAL_DOC_COUNT,
  	  	     COALESCE(TOTAL_FINAL_DATA_SIZE, 0) TOTAL_FINAL_DATA_SIZE,
  	  	     COALESCE(TOTAL_ORIGINAL_DATA_SIZE, 0) TOTAL_ORIGINAL_DATA_SIZE,
  	  	     COALESCE(DATA_DOC_COUNT, 0) DATA_DOC_COUNT,
  	  	     DATE_CREATED,
  	  	     YEAR(SUMMARY_DATE) SUMMARY_YEAR,
  	  	     MONTH(SUMMARY_DATE) SUMMARY_MONTH,
  	  	     DAY(SUMMARY_DATE) SUMMARY_DAY,
  	  	     HOUR(SUMMARY_DATE) SUMMARY_HOUR
  	  	from(
  	  	select
  	  		CASE WHEN doc_sum.HASH_ID 			IS NULL THEN tmp_sum.HASH_ID 		ELSE doc_sum.HASH_ID 		END HASH_ID,
  	  	    CASE WHEN doc_sum.CLIENT_ID 		IS NULL THEN tmp_sum.CLIENT_ID 		ELSE doc_sum.CLIENT_ID 		END CLIENT_ID,
  	  	    CASE WHEN doc_sum.SUMMARY_DATE 		IS NULL THEN tmp_sum.SUMMARY_DATE 	ELSE doc_sum.SUMMARY_DATE 	END SUMMARY_DATE,
  	  	    CASE WHEN doc_sum.SOURCE_ID 		IS NULL THEN tmp_sum.SOURCE_ID 		ELSE doc_sum.SOURCE_ID 		END SOURCE_ID,
  	  	    CASE WHEN doc_sum.DESTINATION_ID 	IS NULL THEN tmp_sum.DESTINATION_ID ELSE doc_sum.DESTINATION_ID END DESTINATION_ID,
  	  	    CASE WHEN doc_sum.DOCUMENT_TYPE 	IS NULL THEN tmp_sum.DOCUMENT_TYPE 	ELSE doc_sum.DOCUMENT_TYPE 	END DOCUMENT_TYPE,
  	  	    CASE WHEN doc_sum.FORMAT 			IS NULL THEN tmp_sum.FORMAT 		ELSE doc_sum.FORMAT 		END FORMAT,
  	  		CASE WHEN doc_sum.STANDARD 			IS NULL THEN tmp_sum.STANDARD		ELSE doc_sum.STANDARD		END STANDARD,
  	  	    CASE WHEN doc_sum.VERSION 			IS NULL THEN tmp_sum.VERSION		ELSE doc_sum.VERSION		END VERSION,
  	  	    CASE WHEN doc_sum.DOCUMENT_STATUS 	IS NULL THEN tmp_sum.DOCUMENT_STATUS ELSE doc_sum.DOCUMENT_STATUS	END DOCUMENT_STATUS,
  	  	    CASE WHEN doc_sum.CURRENCY_CODE 	IS NULL THEN tmp_sum.CURRENCY_CODE	ELSE doc_sum.CURRENCY_CODE	END CURRENCY_CODE,
  	  	    CASE WHEN doc_sum.DIRECTION 		IS NULL THEN tmp_sum.DIRECTION		ELSE doc_sum.DIRECTION		END DIRECTION,
  	  		CASE WHEN tmp_sum.TOTAL_DOCUMENTS 	IS NOT NULL THEN tmp_sum.TOTAL_DOCUMENTS	ELSE 0				END TOTAL_DOCUMENTS,
  	  	    CASE WHEN tmp_sum.TOTAL_FINANCIAL 	IS NOT NULL THEN tmp_sum.TOTAL_FINANCIAL	ELSE 0				END TOTAL_FINANCIAL,
  	  	    CASE WHEN tmp_sum.FINANCIAL_DOC_COUNT 	IS NOT NULL THEN tmp_sum.FINANCIAL_DOC_COUNT	ELSE 0				END FINANCIAL_DOC_COUNT,
  	  	    CASE WHEN tmp_sum.TOTAL_FINAL_DATA_SIZE 	IS NOT NULL THEN tmp_sum.TOTAL_FINAL_DATA_SIZE	ELSE 0				END TOTAL_FINAL_DATA_SIZE,
  	  	    CASE WHEN tmp_sum.TOTAL_ORIGINAL_DATA_SIZE 	IS NOT NULL THEN tmp_sum.TOTAL_ORIGINAL_DATA_SIZE	ELSE 0				END TOTAL_ORIGINAL_DATA_SIZE,
  	  	    CASE WHEN tmp_sum.DATA_DOC_COUNT 	IS NOT NULL THEN tmp_sum.DATA_DOC_COUNT	ELSE 0				END DATA_DOC_COUNT,
  	  	    CASE WHEN doc_sum.DATE_CREATED 		IS NULL THEN tmp_sum.DATE_CREATED	ELSE doc_sum.DATE_CREATED	END DATE_CREATED
  	  	from (
                select
                    ENCRYPT(
                        doc.CLIENT_ID ||
                        VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24') ||
                        doc.SOURCE_ID ||
                        doc.DESTINATION_ID ||
                        doc.DOCUMENT_TYPE ||
                        COALESCE(doc.FORMAT, '*') ||
                        COALESCE(doc.STANDARD, '*') ||
                        COALESCE(doc.VERSION, '*') ||
                        COALESCE(doc.TRANSACTION_STATUS, '*') ||
                        COALESCE(doc.CURRENCY_CODE, '*') ||
                        COALESCE(doc.DIRECTION, '*')
                    , 'repeatable', 'hash') HASH_ID,
                    doc.CLIENT_ID,
                    TIMESTAMP_FORMAT(
                        VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24')
                    , 'YYYY-MM-DD HH24') AS SUMMARY_DATE,
                    doc.SOURCE_ID,
                    doc.DESTINATION_ID,
                    doc.DOCUMENT_TYPE,
                    doc.FORMAT,
                    doc.STANDARD,
                    doc.VERSION,
                    doc.TRANSACTION_STATUS DOCUMENT_STATUS,
                    doc.CURRENCY_CODE,
                    doc.DIRECTION,
                    current timestamp as DATE_CREATED,
                    SUM(doc.DOCUMENT_COUNT) TOTAL_DOCUMENTS,
                    SUM(doc.DOCUMENT_VALUE) TOTAL_FINANCIAL,
                    SUM(case when doc.DOCUMENT_VALUE is NULL then 0 else 1 end) FINANCIAL_DOC_COUNT,
                    SUM(doc.ORIGINAL_SIZE) TOTAL_ORIGINAL_DATA_SIZE,
                    SUM(doc.FINAL_SIZE) TOTAL_FINAL_DATA_SIZE,
                    SUM(case when doc.ORIGINAL_SIZE is NULL and doc.FINAL_SIZE is NULL then 0 else 1 end) DATA_DOC_COUNT
                from LW_DOCUMENT doc
                LEFT JOIN LW_MESSAGE msg on
                    doc.OUT_WFID = msg.WFID
                WHERE doc.CLIENT_ID > 0 and
                      doc.TRANSACTION_LAST_DATE_TIME >= startDate
                group by
                    doc.CLIENT_ID,
                    VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24'),
                    doc.SOURCE_ID,
                    doc.DESTINATION_ID,
                    doc.DOCUMENT_TYPE,
                    doc.FORMAT,
                    doc.STANDARD,
                    doc.VERSION,
                    doc.TRANSACTION_STATUS,
                    doc.CURRENCY_CODE,
                    doc.DIRECTION
            ) tmp_sum
  	  	LEFT JOIN LW_DOCUMENT_SUMMARY doc_sum ON
  	  		tmp_sum.HASH_ID = doc_sum.HASH_ID
  	 	WHERE tmp_sum.SUMMARY_DATE > startDate
  	  	UNION
  	  	select
  	  		CASE WHEN doc_sum.HASH_ID 			IS NULL THEN tmp_sum.HASH_ID 		ELSE doc_sum.HASH_ID 		END HASH_ID,
  	  	    CASE WHEN doc_sum.CLIENT_ID 		IS NULL THEN tmp_sum.CLIENT_ID 		ELSE doc_sum.CLIENT_ID 		END CLIENT_ID,
  	  	    CASE WHEN doc_sum.SUMMARY_DATE 		IS NULL THEN tmp_sum.SUMMARY_DATE 	ELSE doc_sum.SUMMARY_DATE 	END SUMMARY_DATE,
  	  	    CASE WHEN doc_sum.SOURCE_ID 		IS NULL THEN tmp_sum.SOURCE_ID 		ELSE doc_sum.SOURCE_ID 		END SOURCE_ID,
  	  	    CASE WHEN doc_sum.DESTINATION_ID 	IS NULL THEN tmp_sum.DESTINATION_ID ELSE doc_sum.DESTINATION_ID END DESTINATION_ID,
  	  	    CASE WHEN doc_sum.DOCUMENT_TYPE 	IS NULL THEN tmp_sum.DOCUMENT_TYPE 	ELSE doc_sum.DOCUMENT_TYPE 	END DOCUMENT_TYPE,
  	  	    CASE WHEN doc_sum.FORMAT 			IS NULL THEN tmp_sum.FORMAT 		ELSE doc_sum.FORMAT 		END FORMAT,
  	  		CASE WHEN doc_sum.STANDARD 			IS NULL THEN tmp_sum.STANDARD		ELSE doc_sum.STANDARD		END STANDARD,
  	  	    CASE WHEN doc_sum.VERSION 			IS NULL THEN tmp_sum.VERSION		ELSE doc_sum.VERSION		END VERSION,
  	  	    CASE WHEN doc_sum.DOCUMENT_STATUS 	IS NULL THEN tmp_sum.DOCUMENT_STATUS ELSE doc_sum.DOCUMENT_STATUS	END DOCUMENT_STATUS,
  	  	    CASE WHEN doc_sum.CURRENCY_CODE 	IS NULL THEN tmp_sum.CURRENCY_CODE	ELSE doc_sum.CURRENCY_CODE	END CURRENCY_CODE,
  	  	    CASE WHEN doc_sum.DIRECTION 		IS NULL THEN tmp_sum.DIRECTION		ELSE doc_sum.DIRECTION		END DIRECTION,
  	  		CASE WHEN tmp_sum.TOTAL_DOCUMENTS 		IS NOT NULL THEN tmp_sum.TOTAL_DOCUMENTS		ELSE 0		END TOTAL_DOCUMENTS,
  	  	    CASE WHEN tmp_sum.TOTAL_FINANCIAL 		IS NOT NULL THEN tmp_sum.TOTAL_FINANCIAL		ELSE 0		END TOTAL_FINANCIAL,
  	  	    CASE WHEN tmp_sum.FINANCIAL_DOC_COUNT 	IS NOT NULL THEN tmp_sum.FINANCIAL_DOC_COUNT	ELSE 0		END FINANCIAL_DOC_COUNT,
  	  	    CASE WHEN tmp_sum.TOTAL_FINAL_DATA_SIZE IS NOT NULL THEN tmp_sum.TOTAL_FINAL_DATA_SIZE	ELSE 0		END TOTAL_FINAL_DATA_SIZE,
  	  	    CASE WHEN tmp_sum.TOTAL_ORIGINAL_DATA_SIZE 	IS NOT NULL THEN tmp_sum.TOTAL_ORIGINAL_DATA_SIZE	ELSE 0				END TOTAL_ORIGINAL_DATA_SIZE,
  	  	    CASE WHEN tmp_sum.DATA_DOC_COUNT 	IS NOT NULL THEN tmp_sum.DATA_DOC_COUNT	ELSE 0				END DATA_DOC_COUNT,
  	  	    CASE WHEN doc_sum.DATE_CREATED 		IS NULL THEN tmp_sum.DATE_CREATED	ELSE doc_sum.DATE_CREATED	END DATE_CREATED
  	  	from (
                select
                    ENCRYPT(
                        doc.CLIENT_ID ||
                        VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24') ||
                        doc.SOURCE_ID ||
                        doc.DESTINATION_ID ||
                        doc.DOCUMENT_TYPE ||
                        COALESCE(doc.FORMAT, '*') ||
                        COALESCE(doc.STANDARD, '*') ||
                        COALESCE(doc.VERSION, '*') ||
                        COALESCE(doc.TRANSACTION_STATUS, '*') ||
                        COALESCE(doc.CURRENCY_CODE, '*') ||
                        COALESCE(doc.DIRECTION, '*')
                    , 'repeatable', 'hash') HASH_ID,
                    doc.CLIENT_ID,
                    TIMESTAMP_FORMAT(
                        VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24')
                    , 'YYYY-MM-DD HH24') AS SUMMARY_DATE,
                    doc.SOURCE_ID,
                    doc.DESTINATION_ID,
                    doc.DOCUMENT_TYPE,
                    doc.FORMAT,
                    doc.STANDARD,
                    doc.VERSION,
                    doc.TRANSACTION_STATUS DOCUMENT_STATUS,
                    doc.CURRENCY_CODE,
                    doc.DIRECTION,
                    current timestamp as DATE_CREATED,
                    SUM(doc.DOCUMENT_COUNT) TOTAL_DOCUMENTS,
                    SUM(doc.DOCUMENT_VALUE) TOTAL_FINANCIAL,
                    SUM(case when doc.DOCUMENT_VALUE is NULL then 0 else 1 end) FINANCIAL_DOC_COUNT,
                    SUM(doc.ORIGINAL_SIZE) TOTAL_ORIGINAL_DATA_SIZE,
                    SUM(doc.FINAL_SIZE) TOTAL_FINAL_DATA_SIZE,
                    SUM(case when doc.ORIGINAL_SIZE is NULL and doc.FINAL_SIZE is NULL then 0 else 1 end) DATA_DOC_COUNT
                from LW_DOCUMENT doc
                LEFT JOIN LW_MESSAGE msg on
                    doc.OUT_WFID = msg.WFID
                WHERE doc.CLIENT_ID > 0 and
                      doc.TRANSACTION_LAST_DATE_TIME >= startDate
                group by
                    doc.CLIENT_ID,
                    VARCHAR_FORMAT(doc.TRANSACTION_LAST_DATE_TIME, 'YYYY-MM-DD HH24'),
                    doc.SOURCE_ID,
                    doc.DESTINATION_ID,
                    doc.DOCUMENT_TYPE,
                    doc.FORMAT,
                    doc.STANDARD,
                    doc.VERSION,
                    doc.TRANSACTION_STATUS,
                    doc.CURRENCY_CODE,
                    doc.DIRECTION
            ) tmp_sum
  	  	RIGHT JOIN LW_DOCUMENT_SUMMARY doc_sum ON
  	  		tmp_sum.HASH_ID = doc_sum.HASH_ID
  	  	WHERE doc_sum.SUMMARY_DATE > startDate
  	  	) tmp
  	  	) AS S
  	  	ON (T.HASH_ID = S.HASH_ID)
  	  	WHEN NOT MATCHED
  	  	    THEN INSERT VALUES
  	  	    	(HASH_ID,
  	  			 CLIENT_ID,
  	  		     SUMMARY_DATE,
  	  		     SOURCE_ID,
  	  		     DESTINATION_ID,
  	  		     DOCUMENT_TYPE,
  	  		     FORMAT,
  	  		     STANDARD,
  	  		     VERSION,
  	  		     DOCUMENT_STATUS,
  	  		     CURRENCY_CODE,
  	  		     DIRECTION,
  	  		     TOTAL_DOCUMENTS,
  	  		     TOTAL_FINANCIAL,
  	  		     FINANCIAL_DOC_COUNT,
  	  		     TOTAL_FINAL_DATA_SIZE,
  	  		     TOTAL_ORIGINAL_DATA_SIZE,
  	  		     DATA_DOC_COUNT,
  	  		     DATE_CREATED,
  	  		     SUMMARY_YEAR,
  	  		     SUMMARY_MONTH,
  	  		     SUMMARY_DAY,
  	  		     SUMMARY_HOUR)
  		WHEN MATCHED
  	  		THEN UPDATE SET
  	  			 T.TOTAL_DOCUMENTS = S.TOTAL_DOCUMENTS,
  	  		     T.TOTAL_FINANCIAL = S.TOTAL_FINANCIAL,
  	  		     T.FINANCIAL_DOC_COUNT = S.FINANCIAL_DOC_COUNT,
  	  		     T.TOTAL_FINAL_DATA_SIZE = S.TOTAL_FINAL_DATA_SIZE,
  	  		     T.TOTAL_ORIGINAL_DATA_SIZE = S.TOTAL_ORIGINAL_DATA_SIZE,
  	  		     T.DATA_DOC_COUNT = S.DATA_DOC_COUNT
  	  	;
  END$
--#SET TERMINATOR ;


-- -----------------------------------------------------
-- Message Summarization Stored Procedure
-- -----------------------------------------------------

--#SET TERMINATOR $

CREATE OR REPLACE PROCEDURE LW_SUMMARIZE_MESSAGES (IN daysSummarized INT)
  LANGUAGE SQL
BEGIN

  DECLARE startDate TIMESTAMP(0);
  set startDate = TIMESTAMP_FORMAT(VARCHAR_FORMAT(CURRENT TIMESTAMP - daysSummarized DAYS, 'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24');

  MERGE INTO LW_MESSAGE_SUMMARY AS T
  	USING (
  	select
      ENCRYPT(
         CLIENT_ID ||
         VARCHAR_FORMAT(SUMMARY_DATE, 'YYYY-MM-DD HH24') ||
         DIRECTION ||
         COALESCE(PROTOCOL, '*') ||
         COALESCE(PROTOCOL_INFO, '*') ||
         COALESCE(PARM1_VALUE, '*') ||
         COALESCE(PARM2_VALUE, '*') ||
         COALESCE(STATUS, '*')
       , 'repeatable', 'hash') HASH_ID,
  		 CLIENT_ID,
	     SUMMARY_DATE,
	     DIRECTION,
       PROTOCOL,
       PROTOCOL_INFO,
       PARM1_VALUE,
       PARM2_VALUE,
       STATUS,
       MSG_COUNT,
       TOTAL_DATA_SIZE,
       DATA_MSG_COUNT,
       current timestamp as DATE_CREATED,
       YEAR(SUMMARY_DATE) SUMMARY_YEAR,
	     MONTH(SUMMARY_DATE) SUMMARY_MONTH,
	     DAY(SUMMARY_DATE) SUMMARY_DAY,
	     HOUR(SUMMARY_DATE) SUMMARY_HOUR
  	from(
      SELECT
  			msg.CLIENT_ID,
  			TIMESTAMP_FORMAT(VARCHAR_FORMAT(msg.LAST_DATE_TIME, 'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24') as SUMMARY_DATE,
  			msg.DIRECTION,
  			msg.PROTOCOL,
  			msg.PROTOCOL_INFO,
  			msg.PARM1_VALUE,
  			msg.PARM2_VALUE,
  			msg.STATUS,
  			COUNT(msg.WFID) as MSG_COUNT,
  			SUM(COALESCE(msg.MESSAGE_SIZE, 0)) as TOTAL_DATA_SIZE,
  			SUM(COALESCE(CASE WHEN msg.MESSAGE_SIZE IS NULL THEN 0 ELSE 1 END, 0)) as DATA_MSG_COUNT
  		FROM LW_MESSAGE msg
  		WHERE msg.LAST_DATE_TIME >= startDate AND
            msg.CLIENT_ID IS NOT NULL AND
            msg.DIRECTION IS NOT NULL
  		GROUP BY
  			msg.CLIENT_ID,
  			TIMESTAMP_FORMAT(VARCHAR_FORMAT(msg.LAST_DATE_TIME, 'YYYY-MM-DD HH24'), 'YYYY-MM-DD HH24'),
  			msg.DIRECTION,
  			msg.PROTOCOL,
  			msg.PROTOCOL_INFO,
  			msg.PARM1_VALUE,
  			msg.PARM2_VALUE,
  			msg.STATUS

    ) tmp
  ) AS S
  	ON (T.HASH_ID = S.HASH_ID)
  	WHEN NOT MATCHED
  	    THEN INSERT
  	    	(HASH_ID,
  			   CLIENT_ID,
  		     SUMMARY_DATE,
  		     DIRECTION,
           PROTOCOL,
           PROTOCOL_INFO,
           PARM1_VALUE,
           PARM2_VALUE,
           STATUS,
           MSG_COUNT,
           TOTAL_DATA_SIZE,
           DATA_MSG_COUNT,
  		     DATE_CREATED,
  		     SUMMARY_YEAR,
  		     SUMMARY_MONTH,
  		     SUMMARY_DAY,
  		     SUMMARY_HOUR)
  		     VALUES
  		     (HASH_ID,
   			   CLIENT_ID,
   		     SUMMARY_DATE,
   		     DIRECTION,
            PROTOCOL,
            PROTOCOL_INFO,
            PARM1_VALUE,
            PARM2_VALUE,
            STATUS,
            MSG_COUNT,
            TOTAL_DATA_SIZE,
            DATA_MSG_COUNT,
   		     DATE_CREATED,
   		     SUMMARY_YEAR,
   		     SUMMARY_MONTH,
   		     SUMMARY_DAY,
   		     SUMMARY_HOUR)
  	WHEN MATCHED
  		THEN UPDATE SET
  			 T.MSG_COUNT = S.MSG_COUNT,
  		     T.TOTAL_DATA_SIZE = S.TOTAL_DATA_SIZE,
  		     T.DATA_MSG_COUNT = S.DATA_MSG_COUNT
  	;

END$
--#SET TERMINATOR ;


-- -----------------------------------------------------
-- Partner Update Stored Procedure
-- -----------------------------------------------------

--#SET TERMINATOR $

CREATE OR REPLACE PROCEDURE LW_UPDATE_PARTNERS (
	IN IN_CLIENT_ID INT,
	IN IN_SOURCE_ID VARCHAR(75),
	IN IN_SOURCE_NAME VARCHAR(255),
	IN IN_DESTINATION_ID VARCHAR(75),
	IN IN_DESTINATION_NAME VARCHAR(255),
	IN IN_DOCUMENT_TYPE VARCHAR(75),
	IN IN_FORMAT VARCHAR(75),
	IN IN_STANDARD VARCHAR(75),
	IN IN_VERSION VARCHAR(75),
	IN IN_DIRECTION CHAR(1),
	IN IN_RECEIVE_RULE_ID INT,
	IN IN_SPLIT_RULE_ID INT,
	IN IN_ROUTE_RULE_ID INT,
	IN IN_SEND_RULE_ID INT,
	IN IN_RECEIVE_RULE_BP_MAP VARCHAR(255),
	IN IN_ROUTE_RULE_PRE_BP_MAP VARCHAR(255),
	IN IN_ROUTE_RULE_CORE_BP_MAP VARCHAR(255),
	IN IN_ROUTE_RULE_POST_BP_MAP VARCHAR(255),
	IN IN_ROUTE_RULE_POST_SEND_BP VARCHAR(255),
	IN IN_ROUTE_RULE_ERROR_BP VARCHAR(255),
	IN IN_SEND_RULE_PRE_SEND_BP VARCHAR(255),
	IN IN_SEND_RULE_SEND_BP VARCHAR(255)
)
  LANGUAGE SQL
BEGIN

	DECLARE partnerId INT DEFAULT NULL;
	DECLARE retry INT DEFAULT 1;
	DECLARE success INT DEFAULT 0;
	DECLARE msg VARCHAR(255) DEFAULT '';

	DECLARE CONTINUE HANDLER FOR SQLSTATE VALUE '23505'
		BEGIN
			set success = 0;
			set retry = retry + 1;
		END;

	IF IN_FORMAT IS NULL OR TRIM(IN_FORMAT) = '' THEN
		set IN_FORMAT = '.';
	END IF;

	IF IN_STANDARD IS NULL OR TRIM(IN_STANDARD) = '' THEN
		set IN_STANDARD = '.';
	END IF;

	IF IN_VERSION IS NULL OR TRIM(IN_VERSION) = '' THEN
		set IN_VERSION = '.';
	END IF;


	WHILE retry <= 5 AND success < 1 DO
		set success = 1;

		MERGE INTO LW_PARTNER p1
		USING (
			SELECT
				IN_CLIENT_ID CLIENT_ID,
				IN_SOURCE_ID SOURCE_ID,
				IN_SOURCE_NAME SOURCE_NAME,
				IN_DESTINATION_ID DESTINATION_ID,
				IN_DESTINATION_NAME DESTINATION_NAME,
				IN_DOCUMENT_TYPE DOCUMENT_TYPE,
				IN_FORMAT FORMAT,
				IN_STANDARD STANDARD,
				IN_VERSION VERSION,
				IN_DIRECTION DIRECTION,
				IN_RECEIVE_RULE_ID RECEIVE_RULE_ID,
				IN_SPLIT_RULE_ID SPLIT_RULE_ID,
				IN_ROUTE_RULE_ID ROUTE_RULE_ID,
				IN_SEND_RULE_ID SEND_RULE_ID,
				IN_RECEIVE_RULE_BP_MAP RECEIVE_RULE_BP_MAP,
				IN_ROUTE_RULE_PRE_BP_MAP ROUTE_RULE_PRE_BP_MAP,
				IN_ROUTE_RULE_CORE_BP_MAP ROUTE_RULE_CORE_BP_MAP,
				IN_ROUTE_RULE_POST_BP_MAP ROUTE_RULE_POST_BP_MAP,
				IN_ROUTE_RULE_POST_SEND_BP ROUTE_RULE_POST_SEND_BP,
				IN_ROUTE_RULE_ERROR_BP ROUTE_RULE_ERROR_BP,
				IN_SEND_RULE_PRE_SEND_BP SEND_RULE_PRE_SEND_BP,
				IN_SEND_RULE_SEND_BP SEND_RULE_SEND_BP
			FROM SYSIBM.SYSDUMMY1
		) p2
		ON
			(p1.CLIENT_ID = p2.CLIENT_ID AND
			p1.SOURCE_ID = p2.SOURCE_ID AND
			p1.DESTINATION_ID = p2.DESTINATION_ID AND
			p1.DOCUMENT_TYPE = p2.DOCUMENT_TYPE AND
			p1.FORMAT = p2.FORMAT AND
			p1.STANDARD = p2.STANDARD AND
			p1.VERSION = p2.VERSION )

		WHEN MATCHED THEN UPDATE
			SET
	      DIRECTION = IN_DIRECTION,
				SOURCE_NAME = IN_SOURCE_NAME,
				DESTINATION_NAME = IN_DESTINATION_NAME,
				RECEIVE_RULE_ID = IN_RECEIVE_RULE_ID,
				SPLIT_RULE_ID = IN_SPLIT_RULE_ID,
				ROUTE_RULE_ID = IN_ROUTE_RULE_ID,
				SEND_RULE_ID = IN_SEND_RULE_ID,
				RECEIVE_RULE_BP_MAP = IN_RECEIVE_RULE_BP_MAP,
				ROUTE_RULE_PRE_BP_MAP = IN_ROUTE_RULE_PRE_BP_MAP,
				ROUTE_RULE_CORE_BP_MAP = IN_ROUTE_RULE_CORE_BP_MAP,
				ROUTE_RULE_POST_BP_MAP = IN_ROUTE_RULE_POST_BP_MAP,
				ROUTE_RULE_POST_SEND_BP = IN_ROUTE_RULE_POST_SEND_BP,
				ROUTE_RULE_ERROR_BP = IN_ROUTE_RULE_ERROR_BP,
				SEND_RULE_PRE_SEND_BP = IN_SEND_RULE_PRE_SEND_BP,
				SEND_RULE_SEND_BP = IN_SEND_RULE_SEND_BP,
				LAST_DATE_TIME = current timestamp

		WHEN NOT MATCHED THEN
			INSERT (
				CLIENT_ID,
				SOURCE_ID,
				SOURCE_NAME,
				DESTINATION_ID,
				DESTINATION_NAME,
				DOCUMENT_TYPE,
				FORMAT,
				STANDARD,
				VERSION,
				DIRECTION,
				RECEIVE_RULE_ID,
				SPLIT_RULE_ID,
				ROUTE_RULE_ID,
				SEND_RULE_ID,
				RECEIVE_RULE_BP_MAP,
				ROUTE_RULE_PRE_BP_MAP,
				ROUTE_RULE_CORE_BP_MAP,
				ROUTE_RULE_POST_BP_MAP,
				ROUTE_RULE_POST_SEND_BP,
				ROUTE_RULE_ERROR_BP,
				SEND_RULE_PRE_SEND_BP,
				SEND_RULE_SEND_BP,
				LAST_DATE_TIME
			) VALUES (
				IN_CLIENT_ID,
				IN_SOURCE_ID,
				IN_SOURCE_NAME,
				IN_DESTINATION_ID,
				IN_DESTINATION_NAME,
				IN_DOCUMENT_TYPE,
				IN_FORMAT,
				IN_STANDARD,
				IN_VERSION,
				IN_DIRECTION,
				IN_RECEIVE_RULE_ID,
				IN_SPLIT_RULE_ID,
				IN_ROUTE_RULE_ID,
				IN_SEND_RULE_ID,
				IN_RECEIVE_RULE_BP_MAP,
				IN_ROUTE_RULE_PRE_BP_MAP,
				IN_ROUTE_RULE_CORE_BP_MAP,
				IN_ROUTE_RULE_POST_BP_MAP,
				IN_ROUTE_RULE_POST_SEND_BP,
				IN_ROUTE_RULE_ERROR_BP,
				IN_SEND_RULE_PRE_SEND_BP,
				IN_SEND_RULE_SEND_BP,
				current timestamp
			)

		;

	END WHILE;

	IF (success < 1) THEN

		SET msg = 'Inserting/Updating partner record failed after multiple attempts';
		SIGNAL SQLSTATE '98000'
        	SET MESSAGE_TEXT = msg;
	END IF;

END$
--#SET TERMINATOR ;

-- -----------------------------------------------------
-- Document Extension Key Summarization
-- -----------------------------------------------------
--#SET TERMINATOR $

CREATE PROCEDURE LW_SUMMARIZE_DOCUMENT_EXT LANGUAGE SQL
	BEGIN


    MERGE INTO LW_DOCUMENT_EXT_KEY T
    USING (
      select
        CLIENT_ID,
        DOC_KEY
      FROM LW_DOCUMENT_EXT
      GROUP BY
        CLIENT_ID,
        DOC_KEY
    ) S
    ON (T.CLIENT_ID = S.CLIENT_ID and T.DOC_KEY = S.DOC_KEY)
    WHEN NOT MATCHED
      THEN INSERT
        VALUES (S.CLIENT_ID, S.DOC_KEY)
    ;


    DELETE FROM LW_DOCUMENT_EXT_KEY k
    WHERE NOT EXISTS (
      select
        CLIENT_ID,
        DOC_KEY
      from (
        select
          CLIENT_ID,
          DOC_KEY
        FROM LW_DOCUMENT_EXT
        GROUP BY
          CLIENT_ID,
          DOC_KEY
          ) l
      WHERE k.CLIENT_ID = l.CLIENT_ID and k.DOC_KEY = l.DOC_KEY
    );


    END$

-- -----------------------------------------------------
-- Message Extension Key Summarization
-- -----------------------------------------------------
CREATE PROCEDURE LW_SUMMARIZE_MESSAGE_EXT LANGUAGE SQL
	BEGIN


    MERGE INTO LW_MESSAGE_EXT_KEY T
    USING (
      select
        CLIENT_ID,
        MSG_KEY
      FROM LW_MESSAGE_EXT
      GROUP BY
        CLIENT_ID,
        MSG_KEY
    ) S
    ON (T.CLIENT_ID = S.CLIENT_ID and T.MSG_KEY = S.MSG_KEY)
    WHEN NOT MATCHED
      THEN INSERT
        VALUES (S.CLIENT_ID, S.MSG_KEY)
    ;


    DELETE FROM LW_MESSAGE_EXT_KEY k
    WHERE NOT EXISTS (
      select
        CLIENT_ID,
        MSG_KEY
      from (
        select
          CLIENT_ID,
          MSG_KEY
        FROM LW_MESSAGE_EXT
        GROUP BY
          CLIENT_ID,
          MSG_KEY
          ) l
      WHERE k.CLIENT_ID = l.CLIENT_ID and k.MSG_KEY = l.MSG_KEY
    );


    END$

--#SET TERMINATOR ;


-- -----------------------------------------------------
-- FILE GATEWAY TABLES
-- -----------------------------------------------------

CREATE TABLE LW_FG_ARRIVEDFILE (
	ARRIVEDFILE_KEY VARCHAR(24) NOT NULL,
	MESSAGE_ID bigint DEFAULT NULL,
	USER_ID varchar(100) DEFAULT NULL,
	FILE_NAME varchar(255) NOT NULL,
	FILE_SIZE bigint NOT NULL,
	MAILBOX_PATH varchar(255) NOT NULL,
	DATA_FLOW_ID bigint NOT NULL,
	PROD_ORG_KEY char(24) DEFAULT NULL,
	PROD_ORG_NAME varchar(100) DEFAULT NULL,
	STATE varchar(40) NOT NULL,
	DOCUMENT_ID varchar(255) DEFAULT NULL,
	WFID bigint NOT NULL,
	REVIEWED INTEGER NOT NULL DEFAULT '0',
	REPLAY_AF_KEY char(24) DEFAULT NULL,
	REPLAY_COMMENT varchar(255) DEFAULT NULL,
	ROUTES_REMAIN INTEGER NOT NULL,
	LOCKID INTEGER NOT NULL DEFAULT '0',
	CREATETS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	MODIFYTS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	CREATEUSERID varchar(40) NOT NULL DEFAULT ' ',
	MODIFYUSERID varchar(40) NOT NULL DEFAULT ' ',
	CREATEPROGID varchar(40) NOT NULL DEFAULT ' ',
	MODIFYPROGID varchar(40) NOT NULL DEFAULT ' ',
	DELIVERY_STATE varchar(40) DEFAULT NULL,
	DIST_MSG_ID varchar(255) DEFAULT NULL,
    CONSTRAINT FG_ARRFILE_PK PRIMARY KEY (ARRIVEDFILE_KEY)
) ;

CREATE INDEX FG_AF_CREATETS_IDX ON LW_FG_ARRIVEDFILE (CREATETS);
CREATE INDEX FG_AF_DF_IDX ON LW_FG_ARRIVEDFILE (DATA_FLOW_ID);
CREATE INDEX FG_AF_MODIFYTS_IDX ON LW_FG_ARRIVEDFILE (MODIFYTS);
CREATE INDEX FG_AF_ST_IDX ON LW_FG_ARRIVEDFILE (STATE);



CREATE TABLE LW_FG_EVENT (
	EVENT_KEY BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
	ENTITY_KEY VARCHAR(255),
	ARRIVEDFILE_KEY VARCHAR(24),
	ENTITY_TYPE VARCHAR(40),
	DATA_FLOW_ID BIGINT NOT NULL,
	"TIME" BIGINT NOT NULL,
	COUNTER BIGINT NOT NULL,
	EVENT_CODE VARCHAR(40) NOT NULL,
	LOCKID INTEGER DEFAULT 0 NOT NULL,
	CREATETS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	MODIFYTS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	CREATEUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CREATEPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CONSTRAINT FG_EVT_PK PRIMARY KEY (EVENT_KEY)
);
CREATE INDEX FG_E_DF_IDX ON LW_FG_EVENT (DATA_FLOW_ID);
CREATE INDEX FG_E_E_IDX ON LW_FG_EVENT (ENTITY_KEY);
CREATE INDEX FG_TE_AF_IDX ON LW_FG_EVENT (ARRIVEDFILE_KEY);
CREATE INDEX FG_TE_EC_IDX ON LW_FG_EVENT (EVENT_CODE);
CREATE INDEX FG_TE_MODTS_IDX ON LW_FG_EVENT (MODIFYTS);


CREATE TABLE LW_FG_EVENTATTR (
	EVENTATTR_KEY BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
	EVENT_KEY BIGINT,
	DATA_FLOW_ID BIGINT NOT NULL,
	ORDINAL INTEGER NOT NULL,
	NAME VARCHAR(255) NOT NULL,
	VALUE VARCHAR(255) NOT NULL,
	ARRIVEDFILE_KEY CHAR(24),
	LOCKID INTEGER DEFAULT 0 NOT NULL,
	CREATETS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	MODIFYTS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	CREATEUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CREATEPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CONSTRAINT FG_EVTATTR_PK PRIMARY KEY (EVENTATTR_KEY)
);
CREATE INDEX FG_TEA_AF_IDX ON LW_FG_EVENTATTR (ARRIVEDFILE_KEY);
CREATE INDEX FG_TEA_DF_IDX ON LW_FG_EVENTATTR (DATA_FLOW_ID);
CREATE INDEX FG_TEA_EVTKEY_IDX ON LW_FG_EVENTATTR (EVENT_KEY);
CREATE INDEX FG_TEA_NAMVAL_IDX ON LW_FG_EVENTATTR (NAME,VALUE);



CREATE TABLE LW_FG_ROUTE (
	ROUTE_KEY VARCHAR(24) NOT NULL,
	DATA_FLOW_ID BIGINT NOT NULL,
	ARRIVEDFILE_KEY VARCHAR(24),
	ROUTCHAN_KEY CHAR(24) NOT NULL,
	CONS_ORG_KEY VARCHAR(255),
	CONS_ORG_NAME VARCHAR(100),
	P_FSTRUCT_KEY CHAR(24),
	STATE VARCHAR(40) NOT NULL,
	START_TIME TIMESTAMP NOT NULL,
	COMPLETE_TIME TIMESTAMP,
	DELIVS_REMAIN INTEGER NOT NULL,
	LOCKID INTEGER DEFAULT 0 NOT NULL,
	CREATETS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	MODIFYTS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	CREATEUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CREATEPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CONSTRAINT FG_ROUTE_PK PRIMARY KEY (ROUTE_KEY)
);
CREATE INDEX FG_RT_AFKEY_IDX ON LW_FG_ROUTE (ARRIVEDFILE_KEY);
CREATE INDEX FG_RT_DF_IDX ON LW_FG_ROUTE (DATA_FLOW_ID);
CREATE INDEX FG_RT_MODIFYTS_IDX ON LW_FG_ROUTE (MODIFYTS);



CREATE TABLE LW_FG_DELIVERY (
	DELIVERY_KEY VARCHAR(24) NOT NULL,
	ROUTE_KEY VARCHAR(24) NOT NULL,
	DATA_FLOW_ID BIGINT NOT NULL,
	STATE VARCHAR(40) NOT NULL,
	DELIVCHAN_KEY CHAR(24),
	CONSUMER_DOCID VARCHAR(255),
	CONTENT_TYPE VARCHAR(100),
	FILENAME VARCHAR(255),
	CONSDOC_TYPE VARCHAR(100),
	MAILBOX_PATH VARCHAR(255),
	LATE_CREATE_MBX CHAR(1) DEFAULT 'N',
	CONSUMER_MSGID BIGINT,
	ASYNC_XFER_ID VARCHAR(255),
	LOCKID INTEGER DEFAULT 0 NOT NULL,
	CREATETS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	MODIFYTS TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
	CREATEUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYUSERID VARCHAR(40) DEFAULT ' ' NOT NULL,
	CREATEPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	MODIFYPROGID VARCHAR(40) DEFAULT ' ' NOT NULL,
	DIST_CONSUMER_MSGID VARCHAR(255),
	CONSTRAINT FG_DELIVERY_PK PRIMARY KEY (DELIVERY_KEY)
);
CREATE INDEX FG_ASYNC_IDX ON LW_FG_DELIVERY (ASYNC_XFER_ID);
CREATE INDEX FG_DEL_DF_IDX ON LW_FG_DELIVERY (DATA_FLOW_ID);
CREATE INDEX FG_DEL_ROUTKEY_IDX ON LW_FG_DELIVERY (ROUTE_KEY);
CREATE INDEX FG_DV_DOC_IDX ON LW_FG_DELIVERY (CONSUMER_DOCID);
CREATE INDEX FG_DV_MODIFYTS_IDX ON LW_FG_DELIVERY (MODIFYTS);
CREATE INDEX FG_DV_MSG_IDX ON LW_FG_DELIVERY (CONSUMER_MSGID);
CREATE INDEX FG_DV_ST_IDX ON LW_FG_DELIVERY (STATE);



CREATE TABLE LW_FG_ALERT (
  ID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  ARRIVEDFILE_KEY char(24) DEFAULT NULL,
  MESSAGE varchar(255) NOT NULL,
  DATE_CREATED TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
  PRIMARY KEY (ID)
);

CREATE TABLE LW_FG_ALERT_FILTER (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  NAME VARCHAR(45) NOT NULL,
  MESSAGE VARCHAR(255) NOT NULL,
  FILENAME_REGEX VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (ID)
);


CREATE TABLE LW_FG_ALERT_FILTER_CODE (
  FG_ALERT_FILTER_ID INT NOT NULL,
  EVENT_CODE VARCHAR(40) NOT NULL,
  PRIMARY KEY (FG_ALERT_FILTER_ID,EVENT_CODE),
  CONSTRAINT FK_ALERT_FILTER_CODE_FILTER_ID FOREIGN KEY (FG_ALERT_FILTER_ID) REFERENCES LW_FG_ALERT_FILTER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- TESTING TABLES
-- -----------------------------------------------------


CREATE TABLE LW_TEST_CASE (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  NAME VARCHAR(45) NOT NULL,
  TEST_TYPE VARCHAR(10) NOT NULL,
  DATE_CREATED TIMESTAMP(3) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE UNIQUE INDEX UNQ_CLIENT_NAME ON LW_TEST_CASE (CLIENT_ID, NAME);


CREATE TABLE LW_TEST_CASE_MAP (
  TEST_CASE_ID INT NOT NULL,
  MAP_NAME VARCHAR(255) NOT NULL,
  VALIDATE_IN SMALLINT NOT NULL DEFAULT '1',
  VALIDATE_OUT SMALLINT NOT NULL DEFAULT '1',
  INPUT_FILE VARCHAR(400) NOT NULL,
  RESULT_FILE VARCHAR(400) NOT NULL,
  PRIMARY KEY (TEST_CASE_ID),
  CONSTRAINT FK_TC_MAP_TC_ID FOREIGN KEY (TEST_CASE_ID) REFERENCES LW_TEST_CASE (ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE LW_TEST_CASE_RESULT (
  ID INT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, NO CACHE, NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
  CLIENT_ID INT NOT NULL,
  TEST_CASE_ID INT NOT NULL,
  STATUS VARCHAR(45) NOT NULL,
  STATUS_REASON VARCHAR(1000) DEFAULT NULL,
  START_DATE TIMESTAMP(3) NOT NULL,
  END_DATE TIMESTAMP(3) DEFAULT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_TCR_TEST_CASE_ID FOREIGN KEY (TEST_CASE_ID) REFERENCES LW_TEST_CASE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
);